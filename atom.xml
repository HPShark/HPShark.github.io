<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Happy Shark</title>
  
  <subtitle>Happyshark的窝</subtitle>
  <link href="https://www.happyshark.cn/atom.xml" rel="self"/>
  
  <link href="https://www.happyshark.cn/"/>
  <updated>2024-05-27T16:00:00.000Z</updated>
  <id>https://www.happyshark.cn/</id>
  
  <author>
    <name>HPShark</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>windows部署ubuntu wsl2子系统并调用windows GPU</title>
    <link href="https://www.happyshark.cn/2024/05/28/windows%E9%83%A8%E7%BD%B2ubuntu%20wsl2%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%B9%B6%E8%B0%83%E7%94%A8windows%20GPU/"/>
    <id>https://www.happyshark.cn/2024/05/28/windows%E9%83%A8%E7%BD%B2ubuntu%20wsl2%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%B9%B6%E8%B0%83%E7%94%A8windows%20GPU/</id>
    <published>2024-05-27T16:00:00.000Z</published>
    <updated>2024-05-27T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<hr><hr><p>最近天天想跑一下github上的热门repo，实验室的电脑太少了导致不得不充分利用一下工位上的windwos电脑，把windows部署docker并跑wsl2调GPU的过程总结一下~</p><h1 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h1><ul><li>需要win10 22H2或win11 pro以上的版本</li><li>需要将nvidia更新为最新的驱动</li></ul><h1 id="安装docker-desktop"><a href="#安装docker-desktop" class="headerlink" title="安装docker desktop"></a>安装docker desktop</h1><ol><li><p>Docker下载地址：<a href="https://www.docker.com/get-started/">docker官网下载地址</a><br><img src="https://blogimages.happyshark.cn/windows部署ubuntu-wsl2子系统并调用windows-GPU/aa5fd0b0411b470693b3dc2ce03aa54c.png" alt="在这里插入图片描述"></p></li><li><p>启用hyper-v：<a href="https://docs.microsoft.com/zh-cn/virtualization/hyper-v-on-windows/quick-start/enable-hyper-v">微软教程官网</a>。<br><img src="https://blogimages.happyshark.cn/windows%E9%83%A8%E7%BD%B2ubuntu-wsl2%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%B9%B6%E8%B0%83%E7%94%A8windows-GPU/68169e17ba0849f8bedfd760ab4598c0.png" alt="在这里插入图片描述"></p><p><img src="https://blogimages.happyshark.cn/windows%E9%83%A8%E7%BD%B2ubuntu-wsl2%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%B9%B6%E8%B0%83%E7%94%A8windows-GPU/41e7a15adce54a278dc9148f24d59f5b.png" alt="在这里插入图片描述"><br><img src="https://blogimages.happyshark.cn/windows%E9%83%A8%E7%BD%B2ubuntu-wsl2%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%B9%B6%E8%B0%83%E7%94%A8windows-GPU/c32129b0a7e54b45b10b6935135be218.png" alt="在这里插入图片描述"></p></li><li><p>Shift + Ctrl + ESC 启动任务管理器，查看<code>性能-虚拟化</code>是否启用。<br><img src="https://blogimages.happyshark.cn/windows%E9%83%A8%E7%BD%B2ubuntu-wsl2%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%B9%B6%E8%B0%83%E7%94%A8windows-GPU/fec8ecc8d51442e9b38eae0f10c1e975.png" alt="在这里插入图片描述"></p></li><li><p>安装docker<br><img src="https://blogimages.happyshark.cn/windows%E9%83%A8%E7%BD%B2ubuntu-wsl2%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%B9%B6%E8%B0%83%E7%94%A8windows-GPU/image-20240528162625523.png" alt="image-20240528162625523"></p><blockquote><p>如果需要配置docker镜像加速，推荐阿里云：<a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">容器镜像服务 (aliyun.com)</a></p></blockquote></li></ol><h1 id="安装wsl2"><a href="#安装wsl2" class="headerlink" title="安装wsl2"></a>安装wsl2</h1><h2 id="执行以下命令-将wsl升级为wsl2："><a href="#执行以下命令-将wsl升级为wsl2：" class="headerlink" title="执行以下命令, 将wsl升级为wsl2："></a>执行以下命令, 将wsl升级为wsl2：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wsl --update</span><br><span class="line">wsl --set-default-version 2</span><br></pre></td></tr></table></figure><p>执行以下命令确认版本均为2：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl -l -v </span><br></pre></td></tr></table></figure></p><p><img src="https://blogimages.happyshark.cn/windows%E9%83%A8%E7%BD%B2ubuntu-wsl2%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%B9%B6%E8%B0%83%E7%94%A8windows-GPU/image-20240528172427389.png" alt="image-20240528172427389"></p><h2 id="安装linux子系统"><a href="#安装linux子系统" class="headerlink" title="安装linux子系统"></a>安装linux子系统</h2><ol><li>打开微软商店。搜索【Ubuntu】或【linux】都可以，安装tls长期支持版即可。<br><img src="https://blogimages.happyshark.cn/windows%E9%83%A8%E7%BD%B2ubuntu-wsl2%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%B9%B6%E8%B0%83%E7%94%A8windows-GPU/image-20240528172610644.png" alt="image-20240528172610644"></li><li>打开子系统并进行配置<br><img src="https://blogimages.happyshark.cn/windows%E9%83%A8%E7%BD%B2ubuntu-wsl2%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%B9%B6%E8%B0%83%E7%94%A8windows-GPU/8d2f32885cd440d1a9f7d0f2249adb41.png" alt="在这里插入图片描述"></li><li>设置默认使用root登录<br>管理员权限打开【powershell】<br>运行：<code>ubuntu2004.exe config --default-user root</code><br><img src="https://blogimages.happyshark.cn/windows%E9%83%A8%E7%BD%B2ubuntu-wsl2%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%B9%B6%E8%B0%83%E7%94%A8windows-GPU/22ec365c2e3a49eb863f94f6613f52d0.png" alt="在这里插入图片描述"><br>然后再打开的时候就可以看到默认登录用户为【root】。<br><img src="https://blogimages.happyshark.cn/windows%E9%83%A8%E7%BD%B2ubuntu-wsl2%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%B9%B6%E8%B0%83%E7%94%A8windows-GPU/e6ac5e1e64c348ad9d2b0d42345bb255.png" alt="在这里插入图片描述"></li><li>将Ubuntu2004设置为默认wsl，执行<code>wslconfig /setdefault Ubuntu-20.04</code><br><img src="https://blogimages.happyshark.cn/windows%E9%83%A8%E7%BD%B2ubuntu-wsl2%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%B9%B6%E8%B0%83%E7%94%A8windows-GPU/image-20240528203453444.png" alt="image-20240528203453444"></li><li>docker配置ubuntu20.04 LTS<br><img src="https://blogimages.happyshark.cn/windows部署ubuntu-wsl2子系统并调用windows-GPU/9f6b7a93620c42dca28b80019e3e31f0.png" alt="在这里插入图片描述"><br><img src="https://blogimages.happyshark.cn/windows%E9%83%A8%E7%BD%B2ubuntu-wsl2%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%B9%B6%E8%B0%83%E7%94%A8windows-GPU/0bfebde60dc14a579cf621bce9d6bef2.png" alt="在这里插入图片描述"></li></ol><h1 id="配置ssh链接"><a href="#配置ssh链接" class="headerlink" title="配置ssh链接"></a>配置ssh链接</h1><p>因为有局域网访问的需求，故需要配置远程ssh链接。</p><ol><li><p>打开powershell，执行代码，其中<code>172.27.155.153</code>是wsl的dockerIP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh interface portproxy add v4tov4 listenaddress=0.0.0.0 listenport=2222 connectaddress=172.27.155.153 connectport=22</span><br></pre></td></tr></table></figure><blockquote><p>listenport不要设为22，否则会有bug</p></blockquote></li><li><p>查看windows宿主机端口转发情况：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh interface portproxy show all</span><br></pre></td></tr></table></figure><p><img src="https://blogimages.happyshark.cn/windows%E9%83%A8%E7%BD%B2ubuntu-wsl2%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%B9%B6%E8%B0%83%E7%94%A8windows-GPU/image-20240529193206740.png" alt="image-20240529193206740"></p></li><li><p>当然，如果配置错的话可以删除：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh interface portproxy delete v4tov4 listenaddress=0.0.0.0 listenport=2222</span><br></pre></td></tr></table></figure></li></ol><h1 id="GPU的使用"><a href="#GPU的使用" class="headerlink" title="GPU的使用"></a>GPU的使用</h1><ol><li><p>请确保打开开发人员模式</p><p><img src="https://blogimages.happyshark.cn/windows%E9%83%A8%E7%BD%B2ubuntu-wsl2%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%B9%B6%E8%B0%83%E7%94%A8windows-GPU/image-20240529091738047.png" alt="image-20240529091738047"></p></li><li><p>windows更新到最新版本，并开启可选更新<br><img src="https://blogimages.happyshark.cn/windows%E9%83%A8%E7%BD%B2ubuntu-wsl2%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%B9%B6%E8%B0%83%E7%94%A8windows-GPU/image-20240529091903162.png" alt="image-20240529091903162"><br><img src="https://blogimages.happyshark.cn/windows%E9%83%A8%E7%BD%B2ubuntu-wsl2%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%B9%B6%E8%B0%83%E7%94%A8windows-GPU/image-20240529091937321.png" alt="image-20240529091937321"></p></li><li><p>显卡驱动下载<br>首先需要安装显卡驱动，<a href="https://www.nvidia.cn/Download/index.aspx?lang=cn">NVIDIA官网下载地址</a>。<br>找到自己的显卡型号下载安装即可。<br><img src="https://blogimages.happyshark.cn/windows%E9%83%A8%E7%BD%B2ubuntu-wsl2%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%B9%B6%E8%B0%83%E7%94%A8windows-GPU/image-20240528174134569.png" alt="image-20240528174134569"></p></li><li><p>CUDA For WSL<br>驱动下载：<a href="https://docs.microsoft.com/zh-cn/windows/ai/directml/gpu-cuda-in-wsl">NVIDIA官网文档</a>，找到对应版本下载安装即可。<br><img src="https://blogimages.happyshark.cn/windows%E9%83%A8%E7%BD%B2ubuntu-wsl2%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%B9%B6%E8%B0%83%E7%94%A8windows-GPU/image-20240528174213939.png" alt="image-20240528174213939"></p></li><li><p>在Ubuntu中安装cuda toolkit<br><a href="https://developer.nvidia.com/cuda-toolkit-archive">CUDA Toolkit Archive | NVIDIA Developer</a>在这里找对应的版本，选择x86_64 ws-ubuntu系统选择对应的安装方式即可。</p></li><li><p>配置权限</p><p>完成第三步后如果用root账户登录直接置执行<code>nvidia-smi</code>可以正常使用cuda，但是用普通账户会报错<code>Command &#39;nvidia-smi&#39; not found, but can be installed with:xxx</code>，如果需要用普通账户访问需要还需要配置权限，执行以下梁行代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/lib/wsl/lib/nvidia-smi /usr/bin/nvidia-smi</span><br><span class="line">chmod ogu+x /usr/bin/nvidia-smi</span><br></pre></td></tr></table></figure><p>然后在执行<code>nvidia-smi</code>配置成功~<br><img src="https://blogimages.happyshark.cn/windows%E9%83%A8%E7%BD%B2ubuntu-wsl2%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%B9%B6%E8%B0%83%E7%94%A8windows-GPU/image-20240529091424235.png" alt="image-20240529091424235"></p></li></ol>]]></content>
    
    
    <summary type="html">想用windows正常办公，又想用Ubuntu部署docker然后调用gpu，比来比去wsl2应该是最优解了</summary>
    
    
    
    <category term="技术" scheme="https://www.happyshark.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="docker" scheme="https://www.happyshark.cn/tags/docker/"/>
    
    <category term="wsl2" scheme="https://www.happyshark.cn/tags/wsl2/"/>
    
    <category term="nvidia-smi" scheme="https://www.happyshark.cn/tags/nvidia-smi/"/>
    
  </entry>
  
  <entry>
    <title>语法大学习</title>
    <link href="https://www.happyshark.cn/2023/10/24/%E8%AF%AD%E6%B3%95%E5%A4%A7%E5%AD%A6%E4%B9%A0/"/>
    <id>https://www.happyshark.cn/2023/10/24/%E8%AF%AD%E6%B3%95%E5%A4%A7%E5%AD%A6%E4%B9%A0/</id>
    <published>2023-10-24T14:00:00.000Z</published>
    <updated>2023-10-25T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文是为了记录一下本人在论文之路上遇到的各种奇怪的语法问题，高中不好好学语文，现在被迫承受语法暴击。感谢师兄/师姐/同门对我稀烂语文语文水平的包容。</p><h1 id="中文语法"><a href="#中文语法" class="headerlink" title="中文语法"></a>中文语法</h1><h2 id="形容词需要有主语描述"><a href="#形容词需要有主语描述" class="headerlink" title="形容词需要有主语描述"></a>形容词需要有主语描述</h2><div class="table-container"><table><thead><tr><th>错误</th><th>正确</th><th>原因</th></tr></thead><tbody><tr><td>一个满足选择明文攻击下不可区分(Indistinguishability under Chosen Plaintext Attack,IND-CPA)的对称认证加密方案</td><td>一个满足选择明文攻击下<code>密文</code>不可区分(Indistinguishability under Chosen Plaintext Attack,IND-CPA)的对称认证加密方案</td><td>什么不可区分，当然是密文</td></tr></tbody></table></div><h2 id="动词的主语不要丢"><a href="#动词的主语不要丢" class="headerlink" title="动词的主语不要丢"></a>动词的主语不要丢</h2><div class="table-container"><table><thead><tr><th>错误</th><th>正确</th><th>原因</th></tr></thead><tbody><tr><td>双方随机选择一个密钥对需要交换的秘密$dx$和$dy$加密</td><td>双方<code>分别</code>随机选择一个密钥<code>，并对各自</code>需要交换的秘密$dx$和$dy$加密<code>.</code></td><td>双方是选择一个密钥呢还是分别整两个密钥呢</td></tr></tbody></table></div><h2 id="动词问题"><a href="#动词问题" class="headerlink" title="动词问题"></a>动词问题</h2><div class="table-container"><table><thead><tr><th>错误</th><th>正确</th><th>原因</th></tr></thead><tbody><tr><td>代理合约的权限管理功能确保只有授权的参与方可以更新合约,进一步增强了系统的安全性.</td><td>代理合约的权限管理功能<code>确保了</code>只有授权的参与方可以更新合约,进一步增强了系统的安全性.</td><td>确保/确保了…</td></tr></tbody></table></div><h2 id="宾语问题"><a href="#宾语问题" class="headerlink" title="宾语问题"></a>宾语问题</h2><div class="table-container"><table><thead><tr><th>错误</th><th>正确</th><th>原因</th></tr></thead><tbody><tr><td>本文将参考于雷等人[38]提出的链上公平交换方案思路,Alex等人[7]方案的基础上构造链下部分的密钥公平交换方案,以实现在不显著增加链上开销的情况下对已有原子贷款协议进行扩展.</td><td>本文将参考于雷等人[38]提出的链上公平交换方案思路,Alex等人[7]方案的基础上构造链下部分的密钥公平交换方案,以实现在不显著增加链上开销的情况下对已有原子贷款协议<code>的</code>扩展.</td><td>实现…扩展/实现对…的扩展/实现在…的情况下对…的扩展。<code>进行</code>这里多余了</td></tr><tr><td>这不仅减少了链上的计算需求,还提供了更快的响应时间.</td><td>这不仅减少了链上的计算需求,还提供了更快的响应<code>速度</code>.</td><td>更快的响应速度/更短的响应时间</td></tr><tr><td>这为未来央行数字货币[39]以及数字人民币开展金融业务提供了新思路.</td><td>这为未来央行数字货币[39]以及数字人民币的金融应用提供了新思路。</td><td>货币没法开展业务，开展业务的是人</td></tr></tbody></table></div><h2 id="我干了我自己"><a href="#我干了我自己" class="headerlink" title="我干了我自己"></a>我干了我自己</h2><div class="table-container"><table><thead><tr><th>错误</th><th>正确</th><th>原因</th></tr></thead><tbody><tr><td>基于系统模型和威胁模型,本文从效率、安全性以及可扩展性三个方面定义了本文的设计目标:</td><td>基于系统模型和威胁模型,<code>本节</code>将从效率、安全性以及可扩展性三个方面定义设计目标:</td><td>本文定义了本文的目标？</td></tr></tbody></table></div><h2 id="一件事描述完得用句号"><a href="#一件事描述完得用句号" class="headerlink" title="一件事描述完得用句号"></a>一件事描述完得用句号</h2><div class="table-container"><table><thead><tr><th>错误</th><th>正确</th><th>原因</th></tr></thead><tbody><tr><td>对称认证加密方案$\varepsilon$需满足正确性要求，对于任意认证密钥…</td><td>对称认证加密方案$\varepsilon$需满足正确性要求<code>。</code>对于任意认证密钥…</td><td>第一句话总领全文，句号就ok</td></tr></tbody></table></div><h2 id="表并列省略主语，不然看着太啰嗦"><a href="#表并列省略主语，不然看着太啰嗦" class="headerlink" title="表并列省略主语，不然看着太啰嗦"></a>表并列省略主语，不然看着太啰嗦</h2><div class="table-container"><table><thead><tr><th>错误</th><th>正确</th><th>原因</th></tr></thead><tbody><tr><td>对于任意一个概率多项式时间敌手[A],[A]在下述游戏中的优势…</td><td>对于任意一个概率多项式时间敌手[A],在下述游戏中的优势…</td><td>逗号后面的主语可以删掉了</td></tr></tbody></table></div><h2 id="全称-简称要统一"><a href="#全称-简称要统一" class="headerlink" title="全称-简称要统一"></a>全称-简称要统一</h2><div class="table-container"><table><thead><tr><th>错误</th><th>正确</th><th>原因</th></tr></thead><tbody><tr><td>敌手[A]与挑战者执行游戏…</td><td>敌手[A]与挑战者[C]执行游戏…</td><td>不能敌手有简称挑战者么得</td></tr></tbody></table></div><h2 id="减少长难句"><a href="#减少长难句" class="headerlink" title="减少长难句"></a>减少长难句</h2><div class="table-container"><table><thead><tr><th>错误</th><th>正确</th><th>原因</th></tr></thead><tbody><tr><td>Alex等人[7]基于不经意传输协议和满足IND-CPA的对称认证加密方案提出的两方公平秘密交换协议可以在不需要任何第三方参与的情况下实现秘密交换,即参与交换的两个秘密要么都会被交换,要么没有一个秘密会被交换.</td><td>Alex等人[7]基于不经意传输协议和满足IND-CPA安全定义的对称认证加密方案,提出了一种两方公平秘密交换协议。该协议可以在没有第三方参与的情况下,实现两方之间的秘密交换.参与交换的两个秘密要么都会被交换,要么没有一个秘密会被交换.</td><td>长难句要拆开</td></tr></tbody></table></div><h2 id="表意不明"><a href="#表意不明" class="headerlink" title="表意不明"></a>表意不明</h2><div class="table-container"><table><thead><tr><th>错误</th><th>正确</th><th>原因</th></tr></thead><tbody><tr><td>通过以上过程,实现了X和Y之间的秘密公平交换,并且在此过程中无需任何第三方介入,但代价是协议的错误率为$({M-1)}/{M}\;$并且协议最大需要运行M次,如果将协议运行在合约中会造成大量的计算开销</td><td>通过以上<code>步骤</code>,实现了X和Y之间的秘密公平交换,在此过程中无需任何第三方介入<code>.</code>但是该协议的错误率为$({M-1)}/{M}\;$,并且最多需要运行M次,如果在智能合约中执行该协议会造成较大的计算开销.</td><td>连词过多，太乱了</td></tr><tr><td>此外,通过将部分计算移到链下,进一步提高了系统的效率.这不仅减少了链上的计算需求,还提供了更快的响应时间.</td><td>此外,通过将部分计算<code>迁移</code>至链下执行,进一步提高了系统的效率.这不仅减少了链上的<code>计算量</code>,<code>还缩短了</code>响应时间.</td><td>减少口语化描述</td></tr></tbody></table></div><h2 id="标点符号"><a href="#标点符号" class="headerlink" title="标点符号"></a>标点符号</h2><div class="table-container"><table><thead><tr><th>错误</th><th>正确</th><th>原因</th></tr></thead><tbody><tr><td>债权人、债务人和第三方都参与了链上智能合约的交互过程,如果第三方不参与债务转让,则链上合约只执行贷款协议部分,此时债务转让部分不会产生额外的开销;如果第三方参与债务转让,则在债务转让完成后原本债务人与债权人的贷款协议将转变为第三方与债权人的贷款协议,债务人在债务转让完成后不再参与后续的贷款流程.</td><td>债权人、债务人和第三方都参与了链上智能合约的交互过程.如果第三方不参与债务转让,则链上合约只执行贷款协议部分,此时债务转让部分不会产生额外的开销.如果第三方参与债务转让,则在债务转让完成后,原本存在于债务人与债权人之间的贷款协议将转变为第三方与债权人之间的新的贷款协议.在债务转让后,债务人不再参与后续的贷款流程.</td><td>一件事说完，如果要另起一件事就是句号隔开。</td></tr><tr><td>本文参考了Black等人[3]设计的原子贷款协议,基于可升级智能合约的特点设计了可转让原子贷款协议,协议包含三个合约,具体如下:</td><td>本文参考了Black等人[3]设计的原子贷款协议,基于可升级智能合约的特点设计了可转让原子贷款协议<code>.</code>协议包含三个合约,具体如下:</td><td>两件事用句号隔开</td></tr></tbody></table></div><h1 id="英文语法"><a href="#英文语法" class="headerlink" title="英文语法"></a>英文语法</h1><p>未完待续…</p>]]></content>
    
    
    <summary type="html">记录一下论文路上各种奇怪的语法问题，少壮不学习，老来两行泪。</summary>
    
    
    
    <category term="学习" scheme="https://www.happyshark.cn/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="语文" scheme="https://www.happyshark.cn/tags/%E8%AF%AD%E6%96%87/"/>
    
    <category term="论文" scheme="https://www.happyshark.cn/tags/%E8%AE%BA%E6%96%87/"/>
    
    <category term="学习" scheme="https://www.happyshark.cn/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>群辉container Manager修复思源笔记v2.10.x的accessAuthCode执行命令的错误</title>
    <link href="https://www.happyshark.cn/2023/10/19/%E7%BE%A4%E8%BE%89container%20Manager%E4%BF%AE%E5%A4%8D%E6%80%9D%E6%BA%90%E7%AC%94%E8%AE%B0v2.10.x%E7%9A%84accessAuthCode%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E7%9A%84%E9%94%99%E8%AF%AF/"/>
    <id>https://www.happyshark.cn/2023/10/19/%E7%BE%A4%E8%BE%89container%20Manager%E4%BF%AE%E5%A4%8D%E6%80%9D%E6%BA%90%E7%AC%94%E8%AE%B0v2.10.x%E7%9A%84accessAuthCode%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E7%9A%84%E9%94%99%E8%AF%AF/</id>
    <published>2023-10-19T14:00:00.000Z</published>
    <updated>2023-10-19T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>群晖自从升级到DSM7.2之后原来的docker就变成container Manager了，新的管理面板没法修改容器的执行命令，只能通过ssh修改了。</p><p><img src="https://blogimages.happyshark.cn/%E7%BE%A4%E6%99%96%E4%BF%AE%E6%94%B9container%20Manager%E5%AE%B9%E5%99%A8%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E6%96%B9%E6%B3%95/image-20231019221429031.png" alt="image-20231019221429031"></p><p>刚好思源笔记的docker最新版增加了accessAuthCode检查，如果启动命令没有accessAuthCode的话会报错无法启动，需要在执行命令中添加<code>-accessAuthCode</code>参数，故记录一下配置过程。</p><h1 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h1><ol><li><p>先在群晖的<code>控制面板-终端机和SNMP-终端机</code>界面启用<code>ssh功能</code>。<br><img src="https://blogimages.happyshark.cn/%E7%BE%A4%E6%99%96%E4%BF%AE%E6%94%B9container%20Manager%E5%AE%B9%E5%99%A8%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E6%96%B9%E6%B3%95/image-20231019220626878.png" alt="image-20231019220626878"></p></li><li><p>在群晖的<code>套件中心</code>里停止container Manager运行。<br><img src="https://blogimages.happyshark.cn/%E7%BE%A4%E6%99%96%E4%BF%AE%E6%94%B9container%20Manager%E5%AE%B9%E5%99%A8%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E6%96%B9%E6%B3%95/image-20231019223208191.png" alt="image-20231019223208191"></p></li><li><p>使用ssh软件登陆群晖后台，我这里用的finalshell，账号就是nas的管理员账号，密码就是管理员密码。<br><img src="https://blogimages.happyshark.cn/%E7%BE%A4%E6%99%96%E4%BF%AE%E6%94%B9container%20Manager%E5%AE%B9%E5%99%A8%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E6%96%B9%E6%B3%95/image-20231019220731971.png" alt="image-20231019220731971"></p></li><li><p>输入<code>sudo su</code>指令，获取root权限，密码就是nas管理员账号的密码。</p><p><img src="https://blogimages.happyshark.cn/%E7%BE%A4%E6%99%96%E4%BF%AE%E6%94%B9container%20Manager%E5%AE%B9%E5%99%A8%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E6%96%B9%E6%B3%95/image-20231019221053321.png" alt="image-20231019221053321"></p></li><li><p>执行命令<code>docker ps -a --no-trunc</code>，查看需要修改执行命令的容器名<br><img src="https://blogimages.happyshark.cn/%E7%BE%A4%E6%99%96%E4%BF%AE%E6%94%B9container%20Manager%E5%AE%B9%E5%99%A8%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E6%96%B9%E6%B3%95/image-20231019221327696.png" alt="image-20231019221327696"></p></li><li><p>执行命令<code>cd /volume1/\@docker/containers</code>进入docker的容器文件夹，输入<code>ls</code>查看需要修改的容器文件夹，然后<code>cd &lt;容器id&gt;</code>并进入。</p><p><img src="https://blogimages.happyshark.cn/%E7%BE%A4%E6%99%96%E4%BF%AE%E6%94%B9container%20Manager%E5%AE%B9%E5%99%A8%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E6%96%B9%E6%B3%95/image-20231019221901980.png" alt="image-20231019221901980"></p></li><li><p>执行命令<code>vi config.v2.json</code>修改容器的配置文件，找到<code>Args</code>和<code>Cmd</code>，在里头增加新的命令和参数。</p><blockquote><p>Args是参数，Cmd是完整命令,这里都要填</p></blockquote><p>修改后的Args如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;Args&quot;:[&quot;-workspace&quot;,&quot;/siyuan/workspace/&quot;,&quot;-accessAuthCode&quot;,&quot;itseclab&quot;],</span><br></pre></td></tr></table></figure><p>修改后的Cmd如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">,&quot;Cmd&quot;:[&quot;-workspace&quot;,&quot;/siyuan/workspace/&quot;,&quot;-accessAuthCode&quot;,&quot;itseclab&quot;],</span><br></pre></td></tr></table></figure><p><img src="https://blogimages.happyshark.cn/%E7%BE%A4%E6%99%96%E4%BF%AE%E6%94%B9container%20Manager%E5%AE%B9%E5%99%A8%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E6%96%B9%E6%B3%95/image-20231019223013922.png" alt="image-20231019223013922"></p></li><li><p>保存退出，然后回到群晖的<code>套件中心</code>，运行container Manager。<br><img src="https://blogimages.happyshark.cn/%E7%BE%A4%E6%99%96%E4%BF%AE%E6%94%B9container%20Manager%E5%AE%B9%E5%99%A8%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E6%96%B9%E6%B3%95/image-20231019223245164.png" alt="image-20231019223245164"></p></li></ol><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>思源笔记的最最最新版2.10.11貌似又改回去了，不过老版本因为打不开而没法升级到最新版…就死锁了。</p><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p><a href="https://blog.51cto.com/u_16175484/6828146">群晖 docker 修改命令行启动_mob649e81607bf3的技术博客_51CTO博客</a></p><p><a href="https://www.mmuaa.com/post/52f239637089c8ea.html">docker容器修改启动命令 - 斐斐のBlog (mmuaa.com)</a></p><p><a href="https://www.reddit.com/r/synology/comments/r0rjwk/docker_on_synology_easy_way_to_edit_the_execution/">Docker on Synology - Easy Way to Edit the Execution Command? : synology (reddit.com)</a></p>]]></content>
    
    
    <summary type="html">思源笔记的docker最新版增加了accessAuthCode检查需要增加新的启动命令，群晖的webUI没法修改已经配置好的容器，只能通过ssh修改容器的config来修改执行命令</summary>
    
    
    
    <category term="实验室大杂烩" scheme="https://www.happyshark.cn/categories/%E5%AE%9E%E9%AA%8C%E5%AE%A4%E5%A4%A7%E6%9D%82%E7%83%A9/"/>
    
    
    <category term="docker" scheme="https://www.happyshark.cn/tags/docker/"/>
    
    <category term="群晖" scheme="https://www.happyshark.cn/tags/%E7%BE%A4%E6%99%96/"/>
    
  </entry>
  
  <entry>
    <title>PC,树莓派,安卓的miracl库环境配置</title>
    <link href="https://www.happyshark.cn/2023/04/03/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>https://www.happyshark.cn/2023/04/03/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</id>
    <published>2023-04-03T14:00:00.000Z</published>
    <updated>2023-04-03T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>此篇文章的目的是详细介绍一下miracl库在x86，树莓派4B，安卓手机上的环境配置，按本文章配置完成后就可以直接在PC运行使用miracl库的c++代码，并且将相同代码移植到树莓派4B，安卓手机上，方便把精力更多的放在代码本身而不是环境配置上。文章是我与李慧琳师姐合作完成，感谢师姐领我入坑以及提供的海量技术支持~</p><p>关键词：交叉编译，adb，visualgdb，visual studio</p><h1 id="x86-miracl库环境配置（visual-studio）"><a href="#x86-miracl库环境配置（visual-studio）" class="headerlink" title="x86 miracl库环境配置（visual studio）"></a>x86 miracl库环境配置（visual studio）</h1><p>x86环境配置分为三个部分：</p><ul><li>编译miracl.lib</li><li>导入vs</li><li>运行测试代码</li></ul><h2 id="软件要求"><a href="#软件要求" class="headerlink" title="软件要求"></a>软件要求</h2><ul><li><p>visual studio 2022（windwos社区版），地址：<a href="https://visualstudio.microsoft.com/vs/community/，vs需要安装的组件如下(包括了下面编译调试树莓派和安卓需要的组件)：">https://visualstudio.microsoft.com/vs/community/，vs需要安装的组件如下(包括了下面编译调试树莓派和安卓需要的组件)：</a><br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403181612719.png" alt="image-20230403181612719"></p><p><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403181628425.png" alt="image-20230403181628425"></p></li><li><p>miracl7.0.0源代码，github地址：<a href="https://github.com/miracl/MIRACL">https://github.com/miracl/MIRACL</a></p></li></ul><h2 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h2><ol><li><p>下载miracl库<br>github地址：<a href="https://github.com/miracl/MIRACL">https://github.com/miracl/MIRACL</a></p></li><li><p>新建个文件夹，可以命名为<code>miracl</code>，然后把解压的所有文件都复制<code>miracl</code>中</p><blockquote><p>MIRACL-master中二级、三级目录中的文件要一块拷出来复制进去,最后<code>miracl</code>文件夹中只有文件，没有其他文件夹</p></blockquote><p><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403161607009.png" alt="image-20230403161607009"></p></li><li><p>进到vs安装目录<code>\VS\VC\Auxiliary\Build</code>中，比如我的是<code>D:\software\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build</code></p></li><li><p>shift+右键，打开cmd（管理员模式），执行<code>vcvars32.bat</code><br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403162232003.png" alt="image-20230403162232003"></p></li><li><p>返回到<code>miracl</code>文件夹</p><p><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403162732823.png" alt="image-20230403162732823"></p></li><li><p>执行<code>ms32doit.bat</code>,运行完之后在<code>miracl</code>文件夹里面看到一个miracl.lib文件</p><p><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403163049893.png" alt="image-20230403163049893"></p></li><li><p>然后将miracl库导入vs项目，新建一个c++空项目<br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403163610830.png" alt="image-20230403163610830"></p></li><li><p>在项目文件中创建一个cpp文件，名字随意，我这里创建了一个<code>test.cpp</code>,文件内容如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;big.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">Miracl <span class="title">precision</span><span class="params">(<span class="number">500</span>, <span class="number">10</span>)</span></span>; <span class="comment">// This makes sure that MIRACL</span></span><br><span class="line"><span class="comment">// is initialised before main() // is called</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">/* calculate factorial of number */</span></span><br><span class="line">    Big nf = <span class="number">1</span>;       <span class="comment">/* declare &quot;Big&quot; variable nf */</span></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;factorial program\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;input number n= &quot;</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span> (n &gt; <span class="number">1</span>)</span><br><span class="line">        nf *= (n--);  <span class="comment">/* nf=n!=n*(n-1)*(n-2)*....3*2*1  */</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;n!= &quot;</span> &lt;&lt; nf &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>移动需要的文件：</p><ul><li><p>将<code>MIRACL-master</code>中（注意不是<code>miracl</code>文件夹）的<code>include</code>文件夹里面需要的.h文件放到项目文件夹中的<code>include</code>文件夹中，比如我目前只需要以下三个文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">big.h //看你代码里面需不需要</span><br><span class="line">mirdef.h //必选</span><br><span class="line">miracl.h //必选</span><br></pre></td></tr></table></figure></li><li><p>将<code>MIRACL-master</code>中<code>source</code>里面需要的cpp文件拷到项目文件夹中的<code>source</code>中，我的项目文件夹里面只放了以下一个文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">big.cpp</span><br></pre></td></tr></table></figure></li><li><p>将<code>miracl</code>文件夹中的mircal.lib复制到项目文件夹中<br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403175117842.png" alt="image-20230403175117842"></p></li></ul></li><li><p>右键项目-属性-配置属性-C/C++-常规-附加包含目录，添加<code>include</code><br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403165108384.png" alt="image-20230403165108384"></p></li><li><p>同样在项目属性页面-连接器-常规-附加库目录添加<code>source</code><br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403174039743.png" alt="image-20230403174039743"></p></li><li><p>同样在项目属性页面-连接器-输入-附加依赖添加<code>miracl.lib</code></p><p><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403174138812.png" alt="image-20230403174138812"></p></li><li><p>把对应的头文件和cpp文件还有lib文件添加到项目里，如图所示<br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403175138383.png" alt="image-20230403175138383"></p></li><li><p>运行，结果如下图所示：<br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403175352165.png" alt="image-20230403175352165"></p></li></ol><h1 id="树莓派环境配置（visualGDB）"><a href="#树莓派环境配置（visualGDB）" class="headerlink" title="树莓派环境配置（visualGDB）"></a>树莓派环境配置（visualGDB）</h1><p>树莓派环境配置目标是将windows的代码移植过来，分为五个部分：</p><ul><li>安装visualGDB</li><li>给树莓派安装操作系统</li><li>编译miracl.a</li><li>导入vs</li><li>运行测试代码</li></ul><h2 id="软件-硬件要求"><a href="#软件-硬件要求" class="headerlink" title="软件/硬件要求"></a>软件/硬件要求</h2><ul><li><p>visual studio 2022（windwos社区版），地址：<a href="https://visualstudio.microsoft.com/vs/community/">https://visualstudio.microsoft.com/vs/community/</a>，vs需要安装的组件如下(包括了下面编译调试安卓需要的组件)：<br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403181612719.png" alt="image-20230403181612719"></p><p><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403181628425.png" alt="image-20230403181628425"></p></li><li><p>miracl7.0.0源代码，github地址：<a href="https://github.com/miracl/MIRACL">https://github.com/miracl/MIRACL</a></p></li><li>visualGDB，地址：<a href="https://visualgdb.com/download/">https://visualgdb.com/download/</a></li><li>树莓派操作系统和对应的交叉编译器，地址：www.gnutoolchains.com/raspberry64/</li><li>finalshell，用于ssh链接。地址：<a href="https://www.hostbuf.com">https://www.hostbuf.com</a></li><li>树莓派镜像工具，用于安装操作系统，地址：<a href="https://www.raspberrypi.com/software/">https://www.raspberrypi.com/software/</a></li></ul><h2 id="配置过程-1"><a href="#配置过程-1" class="headerlink" title="配置过程"></a>配置过程</h2><blockquote><p>使用visualGDB配置树莓派环境时必须保证树莓派系统和交叉编译版本一一对应，对于树莓派4B来说，可以直接从这个网址下载树莓派系统和交叉编译器：<br><a href="https://gnutoolchains.com/raspberry64/">https://gnutoolchains.com/raspberry64/</a></p><p>英文教程在这里：gnutoolchains.com/raspberry/tutorial/</p></blockquote><ol><li><p>安装visualGDB，这个是付费软件，可以试用，也可以破解，此处不讨论破解过程，软件安装地址：<a href="https://visualgdb.com/download/">https://visualgdb.com/download/</a>，安装完后vs应该可以新建visualGDB项目<br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403200936747.png" alt="image-20230403200936747"></p></li><li><p>从<a href="https://gnutoolchains.com/raspberry64/下载操作系统镜像2022-01-28-raspios-bullseye-arm64.zip和交叉编译器安装包raspberry64-gcc10.2.1.exe">https://gnutoolchains.com/raspberry64/下载操作系统镜像2022-01-28-raspios-bullseye-arm64.zip和交叉编译器安装包raspberry64-gcc10.2.1.exe</a><br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403180118138.png" alt="image-20230403180118138"></p></li><li><p>安装交叉编译器，注意安装目录不能有空格或者中文，比如我安装到了<code>D:\SysGcc</code></p></li><li><p>把树莓派的sd卡插到电脑上</p></li><li><p>下载树莓派镜像工具并安装后管理员身份运行，点击<code>选择操作系统</code>-<code>使用自定义镜像</code>-选择刚才下载的zip镜像</p></li><li><p>点击设置，配置<strong>ssh（重要，不搞这个你得自己接个显示器然后在树莓派上配置）</strong>，用户名，密码。<br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403194130553.png" alt="image-20230403194130553"><br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403194225575.png" alt="image-20230403194225575"></p></li><li><p>确认sd卡无误（别装错地方啦）之后就可以点<code>烧录</code>，开始安装操作系统<br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403181028275.png" alt="image-20230403181028275"></p></li><li><p>安装完后树莓派开机，配置ssh，记下树莓派的ip地址，用finalshell登陆root账户</p></li><li><p>接下来开始在树莓派上面编译miracl.a库，毕竟代码可以交叉编译，静态库还是要自己整一下的，先在<a href="https://github.com/HPShark/MIRACL-raspbian中下载zip包，在通过finalshell上传到树莓派里。">https://github.com/HPShark/MIRACL-raspbian中下载zip包，在通过finalshell上传到树莓派里。</a></p><p><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403195201255.png" alt="image-20230403195201255"></p></li><li><p>cd到压缩包所在位置，比如我是<code>cd /home/code</code>，新建一个miracl文件夹，一会在visualGDB中导入要用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir miracl</span><br></pre></td></tr></table></figure></li><li><p>然后在ssh终端中执行以下代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">apt install unzip # 安装解压软件</span><br><span class="line">cp MIRACL-raspbian-master.zip miracl/</span><br><span class="line">chmod -R 777 miracl</span><br><span class="line">cd miracl</span><br><span class="line">unzip -j -aa -L MIRACL-raspbian-master.zip # 如果有提示选[A]ll就行</span><br><span class="line">cd .. &amp;&amp; chmod -R 777 miracl &amp;&amp; cd miracl</span><br><span class="line">./linux-raspbian</span><br></pre></td></tr></table></figure><p>然后等上几分钟，就编译好了，按修改时间排下序可以找到<code>miracl.a</code>和<code>mirdef.h</code>，把这俩文件下载下来备着，下面一步要用<br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403200752107.png" alt="image-20230403200752107"></p></li><li><p>然后接下来新建visualGDB项目</p><p><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403200936747.png" alt="image-20230403200936747"></p></li><li><p>新建一个linux Project Wizard，点击add<br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403201217207.png" alt="image-20230403201217207"></p></li><li><p>配置如图，选择next<br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403201232137.png" alt="image-20230403201232137"></p></li><li><p>在这个页面选择第三步安装的交叉编译器目录，并连接ssh后点finish测试链接<br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403201456418.png" alt="image-20230403201456418"></p></li><li><p>如果提示gdb-server未安装的话，执行自动安装就行。<br>（运行太快没截上图orz）</p></li><li><p>链接树莓派上编译好的miracl.a静态库，对项目右键-<code>visualGDB Project Properties</code>-<code>MSBuild Settings</code>，点Build Tools里面右侧Synchronize sysroot<br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403202122411.png" alt="image-20230403202122411"></p></li><li><p>点击 synchronize directories右侧的添加，然后在找到第10步键的miracl目录<br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403202322149.png" alt="image-20230403202322149"></p></li><li><p>就会多出来一个目录，点击Synchronize<br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403202506899.png" alt="image-20230403202506899"></p></li><li><p>因为是将windows代码移植到树莓派，所以把windows的代码（我这里直接将windows代码test.cpp替换至testArm.app内），include，source都复制过来即可，同时要把第11步中的<code>mirdef.h</code>文件替换到include中，将<code>miracl.a</code>放到根目录下，最终目录如下：<br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403204156212.png" alt="image-20230403204156212"></p></li><li><p>对项目右键-<code>visualGDB Project Properties</code>-<code>MSBuild Settings</code>，需要填一些额外配置信息：</p><ul><li>在Common Build Settings 中的 Include Directories内填<code>include</code></li><li>在Common Build Settings 中的Library Names内填<code>source</code></li><li>在Common Build Settings 中的Additional Linker Inputs填写miracl.a的绝对地址</li></ul><p><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403204327514.png" alt="image-20230403204327514"></p></li><li><p>运行代码，结果如下图所示：<br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403204612829.png" alt="image-20230403204612829"></p></li></ol><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li><p>如果有其他输入输出文件，需要把文件拷至二进制文件所在目录。</p><blockquote><p>比如windows上的代码需要读取<code>pubilc.key</code>文件，那得把<code>pubilc.key</code>文件拷贝到树莓派二进制文件存放地址，这个地址得看第15步中的folder，比如我的是/tmp，那就说明交叉编译的二进制文件存放在树莓派的/tmp文件夹下，然后得手动<code>pubilc.key</code>文件拷过去才能正常运行。如果有权限问题还需要手动赋权</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 public.key</span><br></pre></td></tr></table></figure><p><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403231308155.png" alt="image-20230403231308155"></p></blockquote></li><li><p>如果运行出现错误，多半是因为miracl文件夹的绝对位置与树莓派不一致，或者windows上的代码运行时需要读取的文件没加进来。</p></li></ul><h1 id="安卓环境配置（visualGDB）"><a href="#安卓环境配置（visualGDB）" class="headerlink" title="安卓环境配置（visualGDB）"></a>安卓环境配置（visualGDB）</h1><p>安卓的环境配置目标同样是将windows的代码移植过来，但我的手机（红米K30U）和树莓派都是armv8的，所以就把树莓派上的二进制文件移植过去就好，分为五个部分：</p><ul><li>手机安装termux，anlinux</li><li>电脑adb调试连接手机</li><li>把树莓派的miracl库拷贝到手机上的相同位置</li><li>拷贝树莓派内编译好的二进制文件到手机内，赋予+x权限并执行</li></ul><h2 id="软件-硬件要求-1"><a href="#软件-硬件要求-1" class="headerlink" title="软件/硬件要求"></a>软件/硬件要求</h2><ul><li><p>安卓手机需要通过google play安装termux， anlinux</p><blockquote><p>需要梯子，其他下载来源不保证测试通过</p></blockquote></li><li><p>电脑上准备adb调试软件，我是直接用了QtScrcpy，地址：<a href="https://github.com/barry-ran/QtScrcpy">https://github.com/barry-ran/QtScrcpy</a></p><blockquote><p>会adb链接指令可以直接用adb自己链接，这个软件可以一建链接，只需要adb push就行。</p></blockquote></li></ul><h2 id="配置过程-2"><a href="#配置过程-2" class="headerlink" title="配置过程"></a>配置过程</h2><ol><li><p>手机安装好temux后进入软件，第一次可能需要初始化，进入终端后退出，然后打开anlinux，会显示仪表板，然后选择系统</p><p><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403232739125.png" alt="image-20230403232739125"></p></li><li><p>选择第一个ubuntu，点确定。</p><p><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403232817983.png" alt="image-20230403232817983"></p></li><li><p>点击复制，然后切换回termux，粘贴命令并回车执行。<br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403233151085.png" alt="image-20230403233151085"></p></li><li><p>运行完后在termux执行以下代码获取系统文件权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">termux-setup-storage # 申请获取系统文件权限</span><br></pre></td></tr></table></figure></li><li><p>编辑<code>start-ubuntu.sh</code>文件，将<code>#command+=&quot; -b /sdcard&quot;</code>取消注释</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim start-ubuntu.sh</span><br><span class="line"># 按 i 进入编辑模式</span><br><span class="line"># 删除＃号</span><br><span class="line">command+=&quot; -b /sdcard</span><br><span class="line"># 按esc退出编辑模式</span><br><span class="line">输入:wq保存退出（如果改错了输入:q!强制退出）</span><br></pre></td></tr></table></figure><p><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20240307210615907.png" alt="image-20240307210615907"><br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20240307210734520.png" alt="image-20240307210734520"><br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20240307210854699.png" alt="image-20240307210854699"></p></li></ol><ol><li><p>继续执以下代码，进入root@ubuntu环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./start-ubuntu.sh</span><br></pre></td></tr></table></figure><p><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403233818218.png" alt="image-20230403233818218"></p></li><li><p>继续执行以下代码，将系统存储的Download文件夹映射至ubuntu 的share文件夹中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /sdcard/Downloads ./share</span><br></pre></td></tr></table></figure><p><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403235230885.png" alt="image-20230403235230885"></p></li><li><p>下面把miracl库导入Ubuntu系统。通过finalshell把miracl文件夹（第二部分第十步）下载下来<br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403234020128.png" alt="image-20230403234020128"></p></li><li><p>右键-复制文件地址<br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403234146184.png" alt="image-20230403234146184"></p></li><li><p>下载好QtScrcpy，打开先连接手机<br>  <img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403234326772.png" alt="image-20230403234326772"></p></li><li><p>然后直接关掉，在Qtscrcpy文件夹里右键-在终端中打开，输入以下代码将miracl文件夹存入手机系统存储的Download文件夹中，其中miracl地址是第8步中复制的地址</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb push &quot;C:\Users\CrazyBoomYangcong\Desktop\fsdownload\miracl&quot; /sdcard/Download</span><br></pre></td></tr></table></figure><p><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230403234806101.png" alt="image-20230403234806101"></p></li><li><p>返回手机，继续输入以下命令将share文件夹中的miracl文件夹拷贝至/home/code文件夹中，然后在赋权</p><blockquote><p>/home/code这个绝对路径必须和第二部分第10步保持一致</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">midir /home/code</span><br><span class="line">cp -r share/miracl /home/code/</span><br><span class="line">chmod -R 777 /home/code/miracl</span><br><span class="line">ls /home/code</span><br></pre></td></tr></table></figure><p><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230404000116918.png" alt="image-20230404000116918"></p></li><li><p>以上步骤就将手机Ubuntu的环境配置好了，下面将树莓派里的二进制文件拷贝到手机中运行，在finalshell中定位至/tmp文件夹，把里面的二进制文件还有所有的引用文件全下载下来</p><p><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230404000552572.png" alt="image-20230404000552572"></p></li><li><p>然后同第10步一致，把所有文件复制到手机存储中的Download文件夹中<br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230404000724635.png" alt="image-20230404000724635"></p></li><li><p>在手机的Ubuntu终端上使用cp命令将所有文件从share文件夹拷贝至本地，并赋权。这里我只有一个二进制文件testArm和一个引用文件public.key</p><blockquote><p>不可以直接在share文件夹中运行，会报错</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cp share/testArm .</span><br><span class="line">cp share/public.key .</span><br><span class="line">chmod 777 testArm</span><br><span class="line">chmod 777 public.key</span><br></pre></td></tr></table></figure></li><li><p>运行以下命令执行二进制文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./testArm</span><br></pre></td></tr></table></figure><p><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230404001248816.png" alt="image-20230404001248816"></p></li></ol><h2 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>如果手机root那么可以直接adb shell执行二进制文件，我的手机没有root所以只能通过termux曲线救国。</li><li><p>因为使用了miracl库，所以得把visualGDB在树莓派上引用的miracl库的目录（第二部分第10步）位置拷到手机的相同位置上。比如树莓派上我的miracl库位置是<code>/home/code/miracl</code>,那我就得把这个文件夹拷到手机上绝对路径相同的地方，同样得是<code>/home/code/miracl</code>。</p></li><li><p>如果有其他输入输出文件，连同二进制文件一起拷到手机上,方法同树莓派环境配置注意事项第一条一致。</p></li><li><p>如果运行出现错误，多半是因为miracl文件夹的绝对位置与树莓派不一致，或者windows上的代码运行时需要读取的文件没加进来。</p></li></ul><h1 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h1><p>所有配置过程不一定是最简洁的，我在配置的过程中也是磕磕绊绊，除了以上的方案其实还有其他办法可以达到相同的效果，所以我的过程仅供参考~如果有问题欢迎留言讨论，文章如果可以有效帮助新入坑miracl的萌新希望可以给你的导师美言几句<strong>snnu的禹勇老师手下的娃文档写的不错</strong>，如果能传到我导的耳朵里说不定他可以在疯狂星期四v我50吃两个奥尔良鸡腿堡<br><img src="https://blogimages.happyshark.cn/PC,%E6%A0%91%E8%8E%93%E6%B4%BE,%E5%AE%89%E5%8D%93%E7%9A%84miracl%E5%BA%93%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/qqpyimg1680538830.png" alt="img"></p><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p><a href="https://www.aflyingfish.top/articles/407987f7a995/">https://www.aflyingfish.top/articles/407987f7a995/</a><br><a href="https://blog.csdn.net/leapoo/article/details/108260941">https://blog.csdn.net/leapoo/article/details/108260941</a><br><a href="https://blog.csdn.net/leapoo/article/details/122927101">https://blog.csdn.net/leapoo/article/details/122927101</a><br><a href="https://blog.csdn.net/hello_baby6/article/details/117407705">https://blog.csdn.net/hello_baby6/article/details/117407705</a><br><a href="https://blog.csdn.net/langshanglibie/article/details/119788253">https://blog.csdn.net/langshanglibie/article/details/119788253</a><br><a href="https://zhuanlan.zhihu.com/p/441333966">https://zhuanlan.zhihu.com/p/441333966</a><br><a href="https://learn.microsoft.com/zh-cn/cpp/linux/deploy-run-and-debug-your-linux-project?view=msvc-170">https://learn.microsoft.com/zh-cn/cpp/linux/deploy-run-and-debug-your-linux-project?view=msvc-170</a><br><a href="https://zhuanlan.zhihu.com/p/433896930">https://zhuanlan.zhihu.com/p/433896930</a><br><a href="https://www.cpp-prog.com/%E7%BC%96%E7%A8%8B/Cross-Compile-Raspberry-Pi/">https://www.cpp-prog.com/%E7%BC%96%E7%A8%8B/Cross-Compile-Raspberry-Pi/</a><br><a href="https://crosstool-ng.github.io/">https://crosstool-ng.github.io/</a><br><a href="https://blog.csdn.net/qq_32312307/article/details/114907522">https://blog.csdn.net/qq_32312307/article/details/114907522</a><br><a href="https://gist.github.com/AndySze/5434903#1%E4%B8%8B%E8%BD%BDct-ng%E6%BA%90%E7%A0%81">https://gist.github.com/AndySze/5434903#1%E4%B8%8B%E8%BD%BDct-ng%E6%BA%90%E7%A0%81</a><br><a href="https://blog.csdn.net/Jymman/article/details/105105570">https://blog.csdn.net/Jymman/article/details/105105570</a><br><a href="https://www.leoxiaofei.com/build-arm-windows.html">https://www.leoxiaofei.com/build-arm-windows.html</a><br><a href="https://gnutoolchains.com/raspberry/tutorial/">https://gnutoolchains.com/raspberry/tutorial/</a><br><a href="https://gnutoolchains.com/raspberry/tutorial/sysroot">https://gnutoolchains.com/raspberry/tutorial/sysroot</a><br><a href="https://visualgdb.com/tutorials/raspberry/">https://visualgdb.com/tutorials/raspberry/</a><br><a href="https://visualgdb.com/tutorials/raspberry/crosscompiler/">https://visualgdb.com/tutorials/raspberry/crosscompiler/</a><br><a href="https://zhuanlan.zhihu.com/p/58949515">https://zhuanlan.zhihu.com/p/58949515</a><br><a href="https://zhuanlan.zhihu.com/p/56030172">https://zhuanlan.zhihu.com/p/56030172</a><br><a href="https://zhuanlan.zhihu.com/p/58920282">https://zhuanlan.zhihu.com/p/58920282</a><br><a href="https://ilyas-hamadouche.medium.com/build-your-c-projects-faster-using-ninja-3d7af9b418fc">https://ilyas-hamadouche.medium.com/build-your-c-projects-faster-using-ninja-3d7af9b418fc</a><br><a href="https://zhuanlan.zhihu.com/p/157362239">https://zhuanlan.zhihu.com/p/157362239</a><br><a href="https://zhuanlan.zhihu.com/p/66735155">https://zhuanlan.zhihu.com/p/66735155</a><br><a href="https://cloud.tencent.com/developer/article/1592277">https://cloud.tencent.com/developer/article/1592277</a><br><a href="https://github.com/miracl/MIRACL/issues/97">https://github.com/miracl/MIRACL/issues/97</a><br><a href="https://zhuanlan.zhihu.com/p/336980673">https://zhuanlan.zhihu.com/p/336980673</a><br><a href="https://www.cnblogs.com/robinex/p/7858410.html">https://www.cnblogs.com/robinex/p/7858410.html</a><br><a href="https://blog.csdn.net/wangzhiyu1980/article/details/16972937">https://blog.csdn.net/wangzhiyu1980/article/details/16972937</a><br><a href="https://github.com/Innovativaltd/RiskAdjustedReturn">https://github.com/Innovativaltd/RiskAdjustedReturn</a><br><a href="https://zhuanlan.zhihu.com/p/56530788">https://zhuanlan.zhihu.com/p/56530788</a><br><a href="https://blog.csdn.net/afei__/article/details/80719691">https://blog.csdn.net/afei__/article/details/80719691</a><br><a href="https://blog.csdn.net/hdanbang/article/details/49403137">https://blog.csdn.net/hdanbang/article/details/49403137</a><br><a href="https://blog.csdn.net/afei__/article/details/80720602">https://blog.csdn.net/afei__/article/details/80720602</a><br><a href="https://visualgdb.com/android/tools">https://visualgdb.com/android/tools</a><br><a href="https://blog.csdn.net/u010144805/article/details/78767694">https://blog.csdn.net/u010144805/article/details/78767694</a><br><a href="https://visualgdb.com/tutorials/android/tests/">https://visualgdb.com/tutorials/android/tests/</a><br><a href="https://visualgdb.com/KB/?ProblemID=host64">https://visualgdb.com/KB/?ProblemID=host64</a><br><a href="https://blog.csdn.net/qq_34508943/article/details/113032733">https://blog.csdn.net/qq_34508943/article/details/113032733</a><br><a href="https://blog.csdn.net/u010801248/article/details/73331484">https://blog.csdn.net/u010801248/article/details/73331484</a><br><a href="https://www.jianshu.com/p/c5b59cbe65f7">https://www.jianshu.com/p/c5b59cbe65f7</a><br><a href="https://stackoverflow.com/questions/9721856/unable-to-include-iostream-in-android-why">https://stackoverflow.com/questions/9721856/unable-to-include-iostream-in-android-why</a><br><a href="https://learn.microsoft.com/zh-cn/xamarin/android/get-started/installation/android-emulator/device-manager?tabs=windows&amp;pivots=windows">https://learn.microsoft.com/zh-cn/xamarin/android/get-started/installation/android-emulator/device-manager?tabs=windows&amp;pivots=windows</a><br><a href="https://learn.microsoft.com/zh-cn/xamarin/android/deploy-test/debugging/debug-on-emulator?tabs=windows">https://learn.microsoft.com/zh-cn/xamarin/android/deploy-test/debugging/debug-on-emulator?tabs=windows</a><br><a href="https://www.fity.cn/post/509.html">https://www.fity.cn/post/509.html</a><br><a href="https://cloud.tencent.com/developer/article/1736604">https://cloud.tencent.com/developer/article/1736604</a><br><a href="https://blog.csdn.net/sinat_28442665/article/details/84136133">https://blog.csdn.net/sinat_28442665/article/details/84136133</a><br><a href="https://wiki.termux.com/wiki/PRoot#Installing_Linux_distributions">https://wiki.termux.com/wiki/PRoot#Installing_Linux_distributions</a><br><a href="https://zhuanlan.zhihu.com/p/95865982">https://zhuanlan.zhihu.com/p/95865982</a><br><a href="https://github.com/kimud6003/MIRACL-raspbian/tree/Raspbian">https://github.com/kimud6003/MIRACL-raspbian/tree/Raspbian</a></p>]]></content>
    
    
    <summary type="html">介绍一下miracl库在x86，树莓派4B，安卓手机上的环境配置过程，希望读者借此篇文章把更多的精力放在代码本身而不是环境配置上</summary>
    
    
    
    <category term="技术" scheme="https://www.happyshark.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="技术" scheme="https://www.happyshark.cn/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="miracl" scheme="https://www.happyshark.cn/tags/miracl/"/>
    
    <category term="交叉编译" scheme="https://www.happyshark.cn/tags/%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu流量统计工具——vnstat</title>
    <link href="https://www.happyshark.cn/2022/07/10/ubuntu%E6%B5%81%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%B7%A5%E5%85%B7%E2%80%94%E2%80%94vnstat/"/>
    <id>https://www.happyshark.cn/2022/07/10/ubuntu%E6%B5%81%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%B7%A5%E5%85%B7%E2%80%94%E2%80%94vnstat/</id>
    <published>2022-07-10T14:00:00.000Z</published>
    <updated>2022-07-10T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="官网下载"><a href="#官网下载" class="headerlink" title="官网下载"></a>官网下载</h2><p>vnstat tracker：<a href="https://tracker.debian.org/pkg/vnstat">https://tracker.debian.org/pkg/vnstat</a></p><p>编译安装</p><ul><li><p>下载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 也可以下载对应的tag的源文件</span><br><span class="line">git clone https://github.com/vergoh/vnstat.git</span><br></pre></td></tr></table></figure></li><li><p>安装环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc sqlite sqlite-devel make</span><br></pre></td></tr></table></figure></li><li><p>编译&amp;安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd vnstat &amp;&amp; ./configure --prefix=/usr --sysconfdir=/etc &amp;&amp; make</span><br><span class="line"></span><br><span class="line"># 安装</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></li></ul><h2 id="Debian-Ubuntu"><a href="#Debian-Ubuntu" class="headerlink" title="Debian/Ubuntu"></a>Debian/Ubuntu</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install vnstat</span><br></pre></td></tr></table></figure><h2 id="2-Centos"><a href="#2-Centos" class="headerlink" title="2.Centos"></a>2.Centos</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install vnstat</span><br></pre></td></tr></table></figure><h1 id="初始化设置"><a href="#初始化设置" class="headerlink" title="初始化设置"></a>初始化设置</h1><h2 id="创建开机自启动"><a href="#创建开机自启动" class="headerlink" title="创建开机自启动"></a>创建开机自启动</h2><ul><li><p>复制service</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp examples/systemd/vnstat.service /etc/systemd/system/</span><br></pre></td></tr></table></figure></li><li><p>设置开机自启</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable vnstat</span><br></pre></td></tr></table></figure></li></ul><h2 id="查找网卡"><a href="#查找网卡" class="headerlink" title="查找网卡"></a>查找网卡</h2><ul><li><p>KVM/XEN -&gt;eth0/ens3</p></li><li><p>OpenVZ -&gt;venet0</p></li></ul><blockquote><p>根据自己的实际情况查找到网卡命令：ifconfig</p></blockquote><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><ul><li><p>配置文件默认为月统计,为每月流量结算日期,默认为每月1日</p></li><li><p>网卡默认为eth0,这里需要根据自己的实际情况修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/vnstat.conf</span><br><span class="line"></span><br><span class="line"># default interface (leave empty for automatic selection)</span><br><span class="line">Interface &quot;eth0&quot;</span><br><span class="line"></span><br><span class="line"># on which day should months change</span><br><span class="line">MonthRotate 1 </span><br><span class="line">MonthRotateAffectsYears 0</span><br></pre></td></tr></table></figure></li></ul><h2 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h2><blockquote><p>vnstat新版本已经移除了-u参数,如果是新版本直接进行下一部重启即可</p></blockquote><ul><li><p>KVM/XEN</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vnstat -u -i eth0/ens3</span><br></pre></td></tr></table></figure></li><li><p>OpenVZ</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vnstat -u -i venet0</span><br></pre></td></tr></table></figure></li><li><p>数据库路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/var/lib/vnstat/</span><br></pre></td></tr></table></figure></li><li><p>删除数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vnstat --delete --force -i eth0/ens3</span><br></pre></td></tr></table></figure></li></ul><h2 id="4-重启"><a href="#4-重启" class="headerlink" title="4.重启"></a>4.重启</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart vnstat</span><br></pre></td></tr></table></figure><h1 id="其余命令"><a href="#其余命令" class="headerlink" title="其余命令"></a>其余命令</h1><h2 id="流量统计查询"><a href="#流量统计查询" class="headerlink" title="流量统计查询"></a>流量统计查询</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vnstat -l    #实时统计</span><br><span class="line">vnstat -h    #按小时查询</span><br><span class="line">vnstat -d    #按天数查询</span><br><span class="line">vnstat -m    #按月数查询</span><br><span class="line">vnstat -w    #按周数查询</span><br><span class="line">vnstat -t    #查询TOP10</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">服务器小水管每月只有183G流量，对ubuntu有了流量统计有了需求，google之后选择vnstat作为流量统计工具，备份一下配置过程</summary>
    
    
    
    <category term="技术" scheme="https://www.happyshark.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="技术" scheme="https://www.happyshark.cn/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="v2ray" scheme="https://www.happyshark.cn/tags/v2ray/"/>
    
  </entry>
  
  <entry>
    <title>习近平总书记在庆祝中国共产党成立100周年大会上的讲话 Part.23</title>
    <link href="https://www.happyshark.cn/2022/06/21/%E4%B9%A0%E8%BF%91%E5%B9%B3%E6%80%BB%E4%B9%A6%E8%AE%B0%E5%9C%A8%E5%BA%86%E7%A5%9D%E4%B8%AD%E5%9B%BD%E5%85%B1%E4%BA%A7%E5%85%9A%E6%88%90%E7%AB%8B100%E5%91%A8%E5%B9%B4%E5%A4%A7%E4%BC%9A%E4%B8%8A%E7%9A%84%E8%AE%B2%E8%AF%9D%20Part.23/"/>
    <id>https://www.happyshark.cn/2022/06/21/%E4%B9%A0%E8%BF%91%E5%B9%B3%E6%80%BB%E4%B9%A6%E8%AE%B0%E5%9C%A8%E5%BA%86%E7%A5%9D%E4%B8%AD%E5%9B%BD%E5%85%B1%E4%BA%A7%E5%85%9A%E6%88%90%E7%AB%8B100%E5%91%A8%E5%B9%B4%E5%A4%A7%E4%BC%9A%E4%B8%8A%E7%9A%84%E8%AE%B2%E8%AF%9D%20Part.23/</id>
    <published>2022-06-21T08:00:00.000Z</published>
    <updated>2022-06-21T08:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="习近平总书记在庆祝中国共产党成立100周年大会上的讲话-Part-23"><a href="#习近平总书记在庆祝中国共产党成立100周年大会上的讲话-Part-23" class="headerlink" title="习近平总书记在庆祝中国共产党成立100周年大会上的讲话 Part.23"></a>习近平总书记在庆祝中国共产党成立100周年大会上的讲话 Part.23</h1><hr><p>同志们、朋友们！</p><p>Comrades and friends,</p><hr><p>一百年前，中国共产党成立时只有50多名党员，今天已经成为拥有9500多万名党员、领导着14亿多人口大国、具有<code>重大全球影响力</code>的<code>世界第一大执政党</code>。</p><p>A century ago, at the time of its founding, the Communist Party of China had just over 50 members. Today, with more than 95 million members in a country of more than 1.4 billion people, it is <code>the largest governing party</code> in the world and enjoys <code>tremendous international influence</code>.</p><ul><li>重大全球影响力 tremendous international influence</li><li>第一大执政党 the largest governing party</li></ul><hr><p>一百年前，中华民族呈现在世界面前的是一派<code>衰败凋零</code>的景象。今天，中华民族向世界展现的是一派<code>欣欣向荣</code>的气象，正以不可阻挡的步伐迈向伟大复兴。</p><p>A century ago, China <code>was in decline and withering away</code> in the eyes of the world. Today, the image it presents to the world is one of a <code>thriving</code>nation that is advancing with <code>unstoppable momentum</code> toward rejuvenation.</p><ul><li>衰败凋零 be in decline and withering away</li><li>欣欣向荣 thriving</li><li>不可阻挡的步伐 unstoppable momentum</li></ul><blockquote><p>中华民族伟大复兴 National rejuvenation</p></blockquote><hr><p>过去一百年，中国共产党向人民、向历史交出了一份优异的答卷。现在，中国共产党团结带领中国人民又踏上了实现第二个百年奋斗目标新的赶考之路。</p><p>Over the past century, the Communist Party of China has secured extraordinary historical achievements on behalf of the people. Today, it is rallying and leading the Chinese people on a new journey toward realizing the second centenary goal.</p><hr><p>全体中国共产党员！党中央号召你们，牢记初心使命，坚定理想信念，践行党的宗旨，永远保持同人民群众的血肉联系，始终同人民想在一起、干在一起，风雨同舟、同甘共苦，继续为实现人民对美好生活的向往不懈努力，努力为党和人民争取更大光荣！</p><p>To all Party members, The Central Committee calls on every one of you to stay true to our Party’s founding mission and <code>stand firm in your ideals and convictions</code>. <code>Acting on the purpose of the Party</code>, you should always <code>maintain close ties with the people</code>, empathize and work with them, <code>stand with them through good times and bad</code>, and continue <code>working tirelessly</code> to realize their aspirations for a better life and to bring still <code>greater glory</code> to the Party and the people.</p><ul><li>坚定理想信念 stand firm in ideals and convictions</li><li>践行党的宗旨 act on the purpose of the Party</li><li>保持同人民群众的血肉联系 maintain close ties with the people</li><li>风雨同舟、同甘共苦 stand with them through goods times and bad</li><li>不懈努力 work tirelessly</li><li>更大光荣 greater glory</li></ul><blockquote><p>全心全意为人民服务根本宗旨 the fundamental purpose of serving the people wholeheartedly/ the principle of serving the people wholeheartedly</p><p>立党为公、执政为民 (the Party’s commitment to) building itself for the public good and exercising power for the people/ (the Party’s commitment to) serving the public good and exercising power in the interests of the people</p><p>全体人民共同富裕 shared prosperity for everyone/ common prosperity for all</p></blockquote>]]></content>
    
    
    <summary type="html">　2021年7月1日，庆祝中国共产党成立100周年大会在北京天安门广场隆重举行。中共中央总书记、国家主席、中央军委主席习近平发表重要讲话。</summary>
    
    
    
    <category term="英语作业" scheme="https://www.happyshark.cn/categories/%E8%8B%B1%E8%AF%AD%E4%BD%9C%E4%B8%9A/"/>
    
    
    <category term="英语" scheme="https://www.happyshark.cn/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>jsdelivr被墙解决方案——使用自己的域名解析github图床防止被dns污染</title>
    <link href="https://www.happyshark.cn/2022/05/31/jsdelivr%E8%A2%AB%E5%A2%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E2%80%94%E2%80%94%E4%BD%BF%E7%94%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90github%E5%9B%BE%E5%BA%8A%E9%98%B2%E6%AD%A2%E8%A2%ABdns%E6%B1%A1%E6%9F%93/"/>
    <id>https://www.happyshark.cn/2022/05/31/jsdelivr%E8%A2%AB%E5%A2%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E2%80%94%E2%80%94%E4%BD%BF%E7%94%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90github%E5%9B%BE%E5%BA%8A%E9%98%B2%E6%AD%A2%E8%A2%ABdns%E6%B1%A1%E6%9F%93/</id>
    <published>2022-05-31T08:00:00.000Z</published>
    <updated>2022-05-31T08:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>2021年底jsdelivr被取消备案，2022年5月份开始出现dns污染的情况，前两天打开博客图片全都裂了，为了保险起见防止后面cdn永久被墙决定修改图片访问方式，使用自己的备案域名解析到github图片仓库防止被dns污染。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul><li>已经解析到github的github.io下的域名一个</li><li>博客图床的仓库必须在同一个账号下</li><li>不会被墙的dns解析服务（我使用的是腾讯的dnspod）</li></ul><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><ol><li><p>打开github图床仓库，添加一个readme.md文件，随便写几句</p><blockquote><p>这个文件是作为首页使用的，如果想自己设计一个index.html的静态页面也可以，但是不能没有，如果没有的话后面启用https的那个步骤可能 不会成功</p></blockquote><p><img src="https://blogimages.happyshark.cn/jsdelivr被墙解决方案——使用自己的域名解析github图床防止被dns污染/image-20220531170230329.png" alt="image-20220531170230329"></p></li><li><p>登陆你的域名解析控制台，添加以下cname值：</p><ul><li>主机记录：可以自己定义，我这里设置成<code>blogimages</code></li><li>记录值：填写解析到你github.io那个仓库的域名，我是把<code>happyshark.cn</code>解析到了<code>HPShark.github.io</code>,所以这里的记录值填<code>hapyshark.cn</code></li></ul><p><img src="https://blogimages.happyshark.cn/jsdelivr%E8%A2%AB%E5%A2%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E2%80%94%E2%80%94%E4%BD%BF%E7%94%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90github%E5%9B%BE%E5%BA%8A%E9%98%B2%E6%AD%A2%E8%A2%ABdns%E6%B1%A1%E6%9F%93/image-20220531171159648.png" alt="image-20220531171159648"></p></li><li><p>返回图床仓库顶部，点击<code>Settings</code>——<code>Pages</code></p><ul><li>在Source下选择你的图床分支，我的是默认master就选择master。</li><li>Theme Chooser这里如果你在第一步生成的md文件，那就选择一个主题他会帮你把md文件渲染成首页，如果第一步使用的是你自己的index.html静态网页那就不用管这个。</li><li>Custom domain这里填写你的解析域名，也就是第二步中的内容，我这里填的是<code>blogimages.happyshark.cn</code>，填写完点击save，会自动检测解析是否成功</li><li>解析成功后可以勾选下面的Enforce HTTPS，开启https（免费自动续期，不用操心隔一段时间要去续期）</li></ul><p>填写完之后就可以把<code>blogimages.happyshark.cn</code>解析到github图床仓库了</p><p><img src="https://blogimages.happyshark.cn/jsdelivr%E8%A2%AB%E5%A2%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E2%80%94%E2%80%94%E4%BD%BF%E7%94%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90github%E5%9B%BE%E5%BA%8A%E9%98%B2%E6%AD%A2%E8%A2%ABdns%E6%B1%A1%E6%9F%93/image-20220531171918953.png" alt="image-20220531171918953"></p></li></ol><p>配置完成之后随便打开一张图片，比如要访问我的图床<code>仓库</code>-<code>hello-world</code>-<code>20200324151821.png</code>这个文件<br><img src="https://blogimages.happyshark.cn/jsdelivr%E8%A2%AB%E5%A2%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E2%80%94%E2%80%94%E4%BD%BF%E7%94%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90github%E5%9B%BE%E5%BA%8A%E9%98%B2%E6%AD%A2%E8%A2%ABdns%E6%B1%A1%E6%9F%93/image-20220531172430163.png" alt="image-20220531172430163"></p><p>那浏览器中应该输入的地址应该如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blogimages.happyshark.cn/hello-world/20200324151821.png</span><br></pre></td></tr></table></figure><p>可以看到成功访问了该图片：</p><p><img src="https://blogimages.happyshark.cn/jsdelivr%E8%A2%AB%E5%A2%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E2%80%94%E2%80%94%E4%BD%BF%E7%94%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90github%E5%9B%BE%E5%BA%8A%E9%98%B2%E6%AD%A2%E8%A2%ABdns%E6%B1%A1%E6%9F%93/image-20220531172737655.png" alt="image-20220531172737655"></p><h1 id="如何批量替换老域名"><a href="#如何批量替换老域名" class="headerlink" title="如何批量替换老域名"></a>如何批量替换老域名</h1><p>使用python脚本一键替换即可，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">OLD = <span class="string">&quot;https://cdn.jsdelivr.net/gh/HPShark/blogimages@master/&quot;</span> <span class="comment">#原来的cdn加速地址前缀</span></span><br><span class="line">NEW = <span class="string">&quot;https://blogimages.happyshark.cn/&quot;</span> <span class="comment">#修改为你解析域名地址前缀</span></span><br><span class="line">path = <span class="string">&quot;_posts&quot;</span> <span class="comment"># 修改为博文存放的目录</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">path</span>):</span></span><br><span class="line">    file_list = [os.path.abspath(os.path.join(root, file)) <span class="keyword">for</span> root, _, files <span class="keyword">in</span> os.walk(path) <span class="keyword">for</span> file <span class="keyword">in</span> files]</span><br><span class="line">    <span class="built_in">print</span>(file_list)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;start ..\n&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> file_list:</span><br><span class="line">        content = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(f, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">            file_content = fp.read()</span><br><span class="line">            content = re.sub(OLD, NEW, file_content.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(f, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">            fp.write(content.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main(path)</span><br></pre></td></tr></table></figure><blockquote><p>放文章的文件夹<code>_posts</code>和python脚本需要放在同一目录下<br><img src="https://blogimages.happyshark.cn/jsdelivr%E8%A2%AB%E5%A2%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E2%80%94%E2%80%94%E4%BD%BF%E7%94%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90github%E5%9B%BE%E5%BA%8A%E9%98%B2%E6%AD%A2%E8%A2%ABdns%E6%B1%A1%E6%9F%93/image-20220531173818414.png" alt="image-20220531173818414"></p></blockquote><p>以上代码会把<code>_posts</code>文件夹下的所有文件中的图片一次性修改，比如将某条博文中图片的url</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/HPShark/blogimages@master/hello-world/20220513103605.png</span><br></pre></td></tr></table></figure><p>替换为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blogimages.happyshark.cn/hello-world/20220513103605.png</span><br></pre></td></tr></table></figure><h1 id="如何在博文中插入用新域名解析的图片"><a href="#如何在博文中插入用新域名解析的图片" class="headerlink" title="如何在博文中插入用新域名解析的图片"></a>如何在博文中插入用新域名解析的图片</h1><p>以PicGo为例，在github图床的设置界面按以下方式设置即可：</p><p><img src="https://blogimages.happyshark.cn/jsdelivr%E8%A2%AB%E5%A2%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E2%80%94%E2%80%94%E4%BD%BF%E7%94%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90github%E5%9B%BE%E5%BA%8A%E9%98%B2%E6%AD%A2%E8%A2%ABdns%E6%B1%A1%E6%9F%93/image-20220531173113105.png" alt="image-20220531173113105"></p><h1 id="存在的bug"><a href="#存在的bug" class="headerlink" title="存在的bug"></a>存在的bug</h1><ul><li><p>使用这种方式后每上传一张图片都会触发一次该仓库的action，所以上传完图片的几分钟内所有图片依然看不了（action正在渲染），这个时间一般在1~2分钟左右，高峰期可能会更慢。渲染完成之后就可以正常解析图片了。</p><p><img src="https://blogimages.happyshark.cn/jsdelivr%E8%A2%AB%E5%A2%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E2%80%94%E2%80%94%E4%BD%BF%E7%94%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90github%E5%9B%BE%E5%BA%8A%E9%98%B2%E6%AD%A2%E8%A2%ABdns%E6%B1%A1%E6%9F%93/image-20220531174115766.png" alt="image-20220531174115766"></p></li></ul>]]></content>
    
    
    <summary type="html">2021年底jsdelivr被取消备案，2022年5月份开始出现dns污染的情况，为了保险起见防止博客的图片全部裂开决定修改图片访问方式，使用自己的备案域名解析到github图片仓库防止被dns污染。</summary>
    
    
    
    <category term="技术" scheme="https://www.happyshark.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="网络" scheme="https://www.happyshark.cn/tags/%E7%BD%91%E7%BB%9C/"/>
    
    <category term="技术" scheme="https://www.happyshark.cn/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>SNNU校园网白嫖&amp;校园网nas搭建指南</title>
    <link href="https://www.happyshark.cn/2022/05/10/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/"/>
    <id>https://www.happyshark.cn/2022/05/10/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/</id>
    <published>2022-05-10T15:21:56.000Z</published>
    <updated>2022-05-30T14:22:34.000Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>12月份和3月份的疫情封宿舍导致只能在宿舍学（mo）习（yu），校园网的免费额度严重不够用，听闻办公区（包括且不限于教室、实验室、图书馆）校园网是免费的，所以有了这篇如果在宿舍区实现校园网免流指南和一些进阶技巧。</p><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>SNNU校园网的收费原理如下：</p><p><img src="https://blogimages.happyshark.cn/SNNU校园网白嫖&amp;校园网nas搭建指南/%E7%BB%93%E6%9E%84.png" alt=""></p><ul><li>如果你的设备是处在宿舍区（黄色部分），那在这个区域产生的外网流量（经由中央网关发送至互联网产生的流量）会经过计费网关进行计费，在校园宽带自助服务系统的黑色部分就是计费流量<br><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220510235206802.png" alt="image-20220510235206802"></li><li><p>如果你的设备在办公区（绿色部分），那在那在这个区域产生的外网流量（经由中央网关发送至互联网产生的流量）不会产生任何费用，在校园宽带自助服务系统中的流量详情都是绿色的<img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220510235546091.png" alt="image-20220510235546091"></p></li><li><p>如果如果你的设备在宿舍区（黄色部分），那在那在这个区域连接办公区（绿色部分）设备产生的内网流量（经由中央网关发送至办公区的流量）不会产生任何费用，在校园宽带自助服务系统中的流量详情中校内流量就属于这种<br><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220510235809299.png" alt="image-20220510235809299"></p></li><li>*如果你的设备在任意区域，那通过校园网ipv6访问外网产生的流量是免费的，在校园宽带自助服务系统中的流量详情中教育网流量就属于这种<br><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220510235956347.png" alt="image-20220510235956347"></li></ul><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><ul><li>我们就可以根据原理1、2、3在办公区可以连外网的域内搭一个vpn服务器，让宿舍区的电脑走校内流量（原理3）链接vpn服务器（上图的路线1），在通过vpn服务器将数据包转发到外网（原理2）实现免流（路线2），下面详细介绍这种方法</li><li>*也可以在外网搭一个ipv6的服务器，通过将所有数据包走ipv6转发给公网服务器（原理4）实现免流，这个方法按下不表</li></ul><h1 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h1><h2 id="VPN服务器搭建"><a href="#VPN服务器搭建" class="headerlink" title="VPN服务器搭建"></a>VPN服务器搭建</h2><h3 id="linux（部署到路由器上）"><a href="#linux（部署到路由器上）" class="headerlink" title="linux（部署到路由器上）"></a>linux（部署到路由器上）</h3><p>linux的话github上面有很多一键安装脚本，安装就略过了，以华硕老毛子固件配置为例：</p><ol><li><p>办公区网络搭建vpn服务器，我的路由器（斐讯k2）刷的华硕老毛子自带<code>vpn服务器</code>功能可以直接用，如果是在路由下级建的vpn服务器要在路由器做好端口转发（或者直接dmz主机也行）</p><p><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220511000846748.png" alt="image-20220511000846748"></p></li><li><p>在<code>客户端账号</code>中配置用户名和密码，然后点<code>+</code>确定<br><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220511001047914.png" alt="image-20220511001047914"></p></li></ol><h3 id="windows（如果实验室没有路由器网线直接链接到电脑上的话可以使用这种方案）"><a href="#windows（如果实验室没有路由器网线直接链接到电脑上的话可以使用这种方案）" class="headerlink" title="windows（如果实验室没有路由器网线直接链接到电脑上的话可以使用这种方案）"></a>windows（如果实验室没有路由器网线直接链接到电脑上的话可以使用这种方案）</h3><h4 id="使用SoftEther-VPN-搭建l2tp服务器"><a href="#使用SoftEther-VPN-搭建l2tp服务器" class="headerlink" title="使用SoftEther VPN 搭建l2tp服务器"></a>使用SoftEther VPN 搭建l2tp服务器</h4><p>SoftEther VPN是日本筑波大学的一个研究项目，它包括服务器端、客户端、服务器端管理工具等数个软件，支持 SSL-VPN (SoftEther VPN) 协议、 L2TP/IPsec 协议、 OpenVPN 协议和 Microsoft SSTP 协议，Windows、Linux、Android和IOS等操作系统都可以连接到SoftEther VPN服务器。</p><ol><li><p>访问 <a href="https://www.softether-download.com/cn.aspx">https://www.softether-download.com/cn.aspx</a> 下载服务端，server里面继承了管理工具所以就不用在额外下载manager工具了<br><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220530214102365.png" alt="image-20220530214102365"></p><blockquote><p>当然服务端也可以下载linux版本的，这里只介绍windows版本安装</p></blockquote></li><li><p>下载完后安装，目录选择自己装软件的目录即可，语言选择<code>中文</code>，安装种类选择<code>SoftEther VPN Server</code><br><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/=7-2-6.jpg" alt="7-2-6.jpg"></p></li><li><p>安装完成后管理工具就在桌面上了，运行<code>SE-VPN Server Manager (Tools)</code>，选择<code>新设置</code>，在新面板中填写<code>设置名(自定义即可)</code>和<code>主机名（直接勾选下面的链接到本地主机）</code>，点击<code>确定</code>保存配置信息；<br><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220530215127171.png" alt="image-20220530215127171"></p></li><li><p>点击<code>连接</code>，连接到vpn server，首次登陆会让设置一个管理员密码<br><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220530215229299.png" alt="image-20220530215229299"></p></li><li><p>执行简易设置向导，选择<code>远程访问VPN Server</code>后点<code>下一步</code><br><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220530215538281.png" alt="image-20220530215538281"></p></li><li><p>ddns设置页面不用管，直接点下一步<br><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220530215713306.png" alt="image-20220530215713306"></p></li><li><p>此时会提示“此VPN Server已具有支持兼容IPSec/L2TP/EtherIP/L2TPv3协议的VPN Client或VPN路由器的新功能……您要设置IPSec吗？”，选择”是“。勾选以下两个选项，<code>填写“IPsec预共享密钥</code>，确定<br><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220530215916874.png" alt="image-20220530215916874"></p></li><li><p>如果不需要内网穿透那就直接<code>禁用VPN Azure</code><br><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220530220032506.png" alt="image-20220530220032506"></p></li><li><p>添加认证用户<br>点击这个hub-<code>管理虚拟hub-管理用户</code>-<code>新增</code>-在这里填写用户名和密码，认证方式选择密钥认证</p><blockquote><p>这里的密码和上面的预共享密钥不是一个密码</p></blockquote><p><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220530220317856.png" alt="image-20220530220317856"></p></li><li><p>开启NAT转换和DHCP服务<br>点击这个hub-<code>管理虚拟hub</code>-<code>虚拟AT和虚拟 DHCF服务器</code>-<code>启用SecureHAT</code></p><p><img src="https://blogimages.happyshark.cn/SNNU校园网白嫖&amp;校园网nas搭建指南/image-20220530220549599.png" alt="image-20220530220549599"></p></li><li><p>开启tcp1701.500,4500端口和udp1701.500,4500端口：<br>打开<code>控制面板</code>-<code>系统和安全</code>-<code>windows Defender防火墙</code>-点击左侧的<code>高级设置</code>-点击左侧的<code>入站规则</code>-在点击右侧的<code>新建规则</code>,添加以下<strong>两个</strong>协议，注意每个端口用<strong>英文逗号</strong>隔开：</p><ul><li>端口-选择<code>tcp</code>协议，特定本地端口处填1701,500,4500。名称填tcp1701,500,4500，其他默认。<br><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220530221341773.png" alt="image-20220530221341773"></li><li>端口-选择<code>udp</code>协议，特定本地端口处填1701,500,4500。名称填udp1701,500,4500，其他默认。<br><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220530221424007.png" alt="image-20220530221424007"></li></ul></li></ol><p>至此服务器端设置完成。</p><h4 id="通过系统自带的vpn接入点配置server（不建议在除了windows-server的其他windows版本上面使用这种方法，因为无法解决nat问题会导致客户端能访问vpn服务器却无法访问互联网）"><a href="#通过系统自带的vpn接入点配置server（不建议在除了windows-server的其他windows版本上面使用这种方法，因为无法解决nat问题会导致客户端能访问vpn服务器却无法访问互联网）" class="headerlink" title="通过系统自带的vpn接入点配置server（不建议在除了windows server的其他windows版本上面使用这种方法，因为无法解决nat问题会导致客户端能访问vpn服务器却无法访问互联网）"></a><del>通过系统自带的vpn接入点配置server（不建议在除了windows server的其他windows版本上面使用这种方法，因为无法解决nat问题会导致客户端能访问vpn服务器却无法访问互联网）</del></h4><ol><li><p><del>桌面按win+R键打开运行，输入”ncpa.cpl”回车打开改适配器设置界面，点击文件-新建传入连接（如果没有文件选项卡的话请按Alt+F）</del></p><p><del><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220512182152910.png" alt="image-20220512182152910"></del></p></li><li><p><del>添加用户，自定义用户名和密码（这里的用户名和密码就是客户端链接的时候需要输入的用户名和密码）,点击下一步</del><br><del><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220512182551894.png" alt="image-20220512182551894"></del></p></li><li><p><del>勾选<code>通过internet</code>选项，点击下一步</del><br><del><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220512182646078.png" alt="image-20220512182646078"></del></p></li><li><p><del>选择ipv4，然后选择属性，指定ip地址（如果没有全局梯子/nas的需求也可以直接使用DHCP分配），点击允许访问</del><br><del><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220512182954851.png" alt="image-20220512182954851"></del></p><blockquote><p><del>下面还需要放行1723端口和gre协议，如果电脑上级接了路由器那这一步需要在路由器里设置端口转发，如果是网线直接连的电脑那按下面的步骤设置</del></p></blockquote></li><li><p><del>打开<code>控制面板</code>-<code>系统和安全</code>-<code>windows Defender防火墙</code>-点击左侧的<code>高级设置</code>-点击左侧的<code>入站规则</code>-在点击右侧的<code>新建规则</code>,添加以下两个协议：</del></p><ul><li><del>端口-选择tcp协议，特定本地端口处填1723-名称填pptp1723，其他默认。</del><br><del><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220512183536178.png" alt="image-20220512183536178"></del></li><li><del>自定义-协议选择GRE-名称填gre，其他默认</del><br><del><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220512183506585.png" alt="image-20220512183506585"></del></li></ul></li></ol><blockquote><p><del>到这一步vpn服务就配置完了，目前有个已知的问题如果电脑上开了杀毒软件会导致后面客户端连接失败，建议关掉用windows defender就好。</del></p></blockquote><h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><ol><li><p>宿舍区电脑（windows）打开设置-网络和Internet-vpn-添加vpn链接，添加配置信息后保存</p><ul><li>vpn提供商：windows内置</li><li>链接名称：自己填就好，这是个备注名</li><li>服务器名称或地址：vpn服务器所在域的ip地址，一般是10.xxx.xxx.xxx</li><li>vpn类型：根据服务器选择<ul><li>如果服务端是pptp那就选pptp服务器（上面教程使用windows 自带接入点配置的服务就是pptp）<br><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220530221945124.png" alt="image-20220530221945124"></li><li>如果服务端是l2tp那就选l2tp服务器（共享密钥，上面教程使用SoftEther VPN配置的就是<strong>预共享密钥</strong>的l2tp）<br><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220530222021123.png" alt="image-20220530222021123"></li></ul></li><li>*（可选）：如果选择预共享密钥的l2tp，那还需要输入预共享密钥</li><li>登录信息类型：用户名和密码</li><li>用户名：在vpn服务器中设置的用户名</li><li>密码：在vpn服务器中设置的密码</li></ul></li><li><p>宿舍区电脑通过web网关认证登陆校园网</p></li><li><p>链接vpn</p></li><li><p>最终效果，网络和vpn应该都是已连接状态<br><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220511001631003.png" alt="image-20220511001631003"></p></li></ol><blockquote><p>如果可以浏览网页但是UWP应用（比如Microsoft store，天气app）无法联网的情况需要解除UWP回环代理限制</p></blockquote><ol><li><p>打开管理员模式powershell或者cmd，输入以下内容回车解除UWP应用代理限制：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FOR /F &quot;tokens=11 delims=\&quot; %p IN (&#x27;REG QUERY &quot;HKCU\Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppContainer\Mappings&quot;&#x27;) DO CheckNetIsolation.exe LoopbackExempt -a -p=%p</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>如果出现连接成功无法上网或者希望vpn域内流量走vpn服务器，正常访问Internet的流量直连，可以进行以下配置。<strong>但是这种配置会使正常访问Internet的流量被计费，按需选择慎用</strong>桌面按win+R键打开运行，输入”ncpa.cpl”回车打开改适配器设置界面，右键vpn链接-<code>属性</code>-<code>网络</code>-点击<code>ipv4</code>-<code>属性</code>-<code>高级</code>-关闭<code>在远程网络上使用默认网关</code>，点确定<br><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220512190801340.png" alt="image-20220512190801340"></p><p>客户端到这里配置就结束了，连接成功后就可以走校内流量免流，如果不放心可以用一下然后登陆校园宽带自助服务系统<a href="http://202.117.144.205/zili/online_list.php">http://202.117.144.205/zili/online_list.php</a> 查看流量使用情况，正常的情况应该是收费流量很少校内流量很多<br><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220511001954532.png" alt="image-20220511001954532"></p></blockquote><h1 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h1><h2 id="nas映射，远程桌面"><a href="#nas映射，远程桌面" class="headerlink" title="nas映射，远程桌面"></a>nas映射，远程桌面</h2><p>上一步配置成功后所有的流量应该就被转发至vpn服务器了，宿舍的电脑，办公区vpn服务器所在域内其他设备都处于一个局域网中，比如实验室nas的ip为192.168.123.1，实验室电脑的ip为192.168.123.3，宿舍电脑链接vpn后在其所在域的ip地址是192.168.123.2，那就可以把实验室的nas映射到宿舍的电脑上，或者通过实验室电脑内网远控宿舍电脑（高速低延迟稳定性极高）</p><h3 id="nas映射配置"><a href="#nas映射配置" class="headerlink" title="nas映射配置"></a>nas映射配置</h3><ol><li>宿舍电脑打开文件管理器，在最上面输入<code>\\+nas的ip</code>，输入用户名和密码即可链接nas<br><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220511085042144.png" alt="image-20220511085042144"></li><li>然后选择任意一个文件夹，右键-映射网络驱动器即可将这个文件夹映射到本地</li></ol><h3 id="远程桌面"><a href="#远程桌面" class="headerlink" title="远程桌面"></a>远程桌面</h3><p>实验室电脑打开<code>远程桌面</code>ip输入宿舍电脑的局域网ip（192.168.123.2），用户名和密码是宿舍电脑。点击链接即可进行远程控制<br><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220511003138324.png" alt="image-20220511003138324"></p><h2 id="统一梯子服务"><a href="#统一梯子服务" class="headerlink" title="统一梯子服务"></a>统一梯子服务</h2><p>当然既然一个域内都有这么多设备了，那也可以在其中一台电脑上搭一个梯子服务，挂好局域网链接配置之后在其他电脑上配置梯子所在的局域网ip+端口即可让域内所有设备都获得科学上网的能力。以chrome插件switchyOmega为例：</p><p><img src="https://blogimages.happyshark.cn/SNNU%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BD%E5%AB%96&amp;%E6%A0%A1%E5%9B%AD%E7%BD%91nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/image-20220511003509676.png" alt="image-20220511003509676"></p>]]></content>
    
    
    <summary type="html">一种从收费区域（宿舍）通过vpn连接到免费区域（实验室）从而实现在收费区域免费上网的办法，同时还有一些进阶功能，比如实现在10开头的内网中把nas存储映射到设备中</summary>
    
    
    
    <category term="技术" scheme="https://www.happyshark.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="网络" scheme="https://www.happyshark.cn/tags/%E7%BD%91%E7%BB%9C/"/>
    
    <category term="技术" scheme="https://www.happyshark.cn/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>安全规约第五讲——安全规约的困难性</title>
    <link href="https://www.happyshark.cn/2022/03/05/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%BA%94%E8%AE%B2%E2%80%94%E2%80%94%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%9A%84%E5%9B%B0%E9%9A%BE%E6%80%A7/"/>
    <id>https://www.happyshark.cn/2022/03/05/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%BA%94%E8%AE%B2%E2%80%94%E2%80%94%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%9A%84%E5%9B%B0%E9%9A%BE%E6%80%A7/</id>
    <published>2022-03-05T14:00:00.000Z</published>
    <updated>2022-03-05T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安全规约所涉及到的问题"><a href="#安全规约所涉及到的问题" class="headerlink" title="安全规约所涉及到的问题"></a>安全规约所涉及到的问题</h1><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%BA%94%E8%AE%B2/16345598490425.jpg" alt=""><br>矛盾点：</p><ol><li>敌手可以攻破一个真实方案（real）</li><li>但是我们要求敌手要攻破一个模拟方案（simulated）</li></ol><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%BA%94%E8%AE%B2/16345598712532.jpg" alt=""></p><ul><li>当given scheme不像real scheme的时候我们不知道敌手的攻击态度</li><li>当given scheme 看起来像real scheme的时候我们不知道敌手的具体攻击过程</li></ul><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%BA%94%E8%AE%B2/16345600638754.jpg" alt=""><br>形象的说，我们的目标和敌手的目标不一致</p><h1 id="模拟-amp-模拟之后发生的事情（simulated）"><a href="#模拟-amp-模拟之后发生的事情（simulated）" class="headerlink" title="模拟&amp;模拟之后发生的事情（simulated）"></a>模拟&amp;模拟之后发生的事情（simulated）</h1><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%BA%94%E8%AE%B2/16345601286032.jpg" alt=""></p><h2 id="成功的模拟（successful-simulation）"><a href="#成功的模拟（successful-simulation）" class="headerlink" title="成功的模拟（successful simulation）"></a>成功的模拟（successful simulation）</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%BA%94%E8%AE%B2/16345602176238.jpg" alt=""></p><ul><li>模拟必须要定义什么时候abort：比如在面对敌手询问签名时不知道如何回答的情况下就必须abort</li></ul><p>一个成功的模拟，整个过程中不应该出现abort，而且对于所有来自敌手的response都应该是正确的</p><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%BA%94%E8%AE%B2/16345604793648.jpg" alt=""></p><ul><li>区分real scheme和simulated scheme一般通过正确性和随机性两种方法，一般不考虑第三种方法（response时间等等）</li><li>randomness：随机数，必须符合随机规律，否则可能会被敌手识别出时simulated scheme</li><li>correctness同理</li></ul><h2 id="敌手的攻击（attack）"><a href="#敌手的攻击（attack）" class="headerlink" title="敌手的攻击（attack）"></a>敌手的攻击（attack）</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%BA%94%E8%AE%B2/16345606842841.jpg" alt=""><br>对于最后两种，根据能否转化为解决困难问题可以分为两大类：useless attack 和 useful attack</p><ul><li>useless attack：不能用敌手的攻击解决困难问题。</li><li>useful attack：敌手的攻击可以转化为解决困难问题。</li></ul><blockquote><p>卧报的某一期有更详细的解释</p></blockquote><p>例子：</p><p><img src="https://blogimages.happyshark.cn/安全规约第五讲/16345608249863.jpg" alt=""><br><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%BA%94%E8%AE%B2/16345611736435.jpg" alt=""></p>]]></content>
    
    
    <summary type="html">安全规约课程笔记，整理一下以备以后查询使用，如果有错误欢迎留言讨论</summary>
    
    
    
    <category term="安全规约" scheme="https://www.happyshark.cn/categories/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6/"/>
    
    
    <category term="安全规约" scheme="https://www.happyshark.cn/tags/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>安全规约第四讲——安全规约入门</title>
    <link href="https://www.happyshark.cn/2022/03/04/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2%E2%80%94%E2%80%94%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E5%85%A5%E9%97%A8/"/>
    <id>https://www.happyshark.cn/2022/03/04/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2%E2%80%94%E2%80%94%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E5%85%A5%E9%97%A8/</id>
    <published>2022-03-04T14:00:00.000Z</published>
    <updated>2022-03-04T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算复杂性的规约理论"><a href="#计算复杂性的规约理论" class="headerlink" title="计算复杂性的规约理论"></a>计算复杂性的规约理论</h1><p>大致框架如下：<br><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345548801794.jpg" alt=""></p><ul><li>关于不可能：源于p和np问题是否等价未证明</li><li>计算问题里的表达方式和安全问题里的表达方式是相反的</li><li>一般表达的时候描述为a比b简单 </li></ul><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345555427447.jpg" alt=""></p><ul><li>解决b可以转化成解决a（a比b简单，故可通过解决b转化为解决a）</li></ul><blockquote><p>规约的描述是从较难到更难的过程，所谓规约就是证明我们关心的方案不比已有的方案简单，即研究一个问题困难度的下限</p></blockquote><p>一些例子：<br><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345557750281.jpg" alt=""></p><ol><li>先输入problem A 的instence</li><li>想办法转化成b中的insetence</li><li>在将b的solution转化回a</li></ol><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345559111667.jpg" alt=""></p><ul><li>proof的重点：如何构造参数使得b可以转化为a</li></ul><blockquote><p>故有时候review证明者的思路可以尝试从后往前看</p><p>只可意会不可言传</p></blockquote><p>例子2<br><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345561004653.jpg" alt=""></p><p>例子3<br><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345561430593.jpg" alt=""></p><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345562172873.jpg" alt=""></p><ul><li>随机选取w（ramdomly choose）：只有这么设置，才能使得b中的instence space可以做到随机选取，具体原因和计算复杂性有关*。</li></ul><h1 id="密码中的安全规约"><a href="#密码中的安全规约" class="headerlink" title="密码中的安全规约"></a>密码中的安全规约</h1><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345564099768.jpg" alt=""></p><p>规约：problem-&gt;problem<br>安全规约：problem-&gt;scheme</p><p>安全规约的作用：解决一个困难问题要比攻破一个安全方案简单</p><p>注：安全规约和安全分析是不一样的，安全分析更多注重于已知的攻击算法，对于未公开的安全攻击方式无能为力，而安全规约则可以囊括一整个安全模型下的所有攻击方式，即使它没有公开。</p><h2 id="证明策略"><a href="#证明策略" class="headerlink" title="证明策略"></a>证明策略</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345569503800.jpg" alt=""></p><h2 id="具体的框架-amp-解释"><a href="#具体的框架-amp-解释" class="headerlink" title="具体的框架&amp;解释"></a>具体的框架&amp;解释</h2><p>首先做出一些定义<br><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345570243368.jpg" alt=""></p><p>证明开始之前需要假设一个敌手</p><ul><li>先模拟一个方案，设定允许询问什么&amp;计算什么</li><li>如何提取出yp</li><li>分析解决困难问题p的优势是不可忽略的</li></ul><p>Q：安全规约一定要分析嘛？<br>A：没有分析的安全规约一定不是完整的</p><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345572932255.jpg" alt=""></p><blockquote><p>安全规约更多的是证明a和b的关系，至于b是否存在不考虑</p></blockquote><p><strong>一些容易混淆的概念</strong><br><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345574057803.jpg" alt=""><br>real scheme VS simulated scheme<br><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345574683853.jpg" alt=""></p><p>real scheme：通过运行算法得来的<br>simulated scheme：</p><p>challenger VS simulator<br><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345575395508.jpg" alt=""><br>challenger：最好出现在安全模型里<br>simulator：最好出现在安全规约里</p><p>real attack VS simulation </p><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345576404200.jpg" alt=""></p><ul><li>informations：敌手需要知道的信息，根据模型而来的</li><li>二者的区别可以粗暴的理解成两个平行世界的角色</li></ul><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345577083721.jpg" alt=""></p><blockquote><p>有点类似于网络聊天中判队对方是人是狗</p></blockquote><ul><li>这里的规约算法只需模拟出敌手要的结果而已而不是整个算法，比如在证明cpa安全的时候我们无需把所有具体的算法都模拟出来</li></ul><h2 id="indistinguishable"><a href="#indistinguishable" class="headerlink" title="indistinguishable"></a>indistinguishable</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345579046300.jpg" alt=""><br>如果不能判断b是通过哪种方法计算的，则称indistinguishable</p><blockquote><p> 注：这里的a要随机选取，否则可能会出现可区分行，比如如果a=1的概率超级高，则在选择方法的时候就可以对结果进行区分。</p></blockquote><h2 id="breaking-to-solution"><a href="#breaking-to-solution" class="headerlink" title="breaking to solution"></a>breaking to solution</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345581246358.jpg" alt=""><br>可以通过三种方式转换</p><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345581808667.jpg" alt=""><br>一二种比较常见<br>第三种比较特殊，是将一个判别式的规约问题转化为计算的规约问题</p><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345584839722.jpg" alt=""><br>T=Ｏ(q)：与询问次数有关，消不掉<br>q：与安全模型相关</p><h2 id="tight-reduction-amp-Loose-Reduction"><a href="#tight-reduction-amp-Loose-Reduction" class="headerlink" title="tight reduction &amp; Loose Reduction"></a>tight reduction &amp; Loose Reduction</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345586101617.jpg" alt=""></p><ul><li>目前所有的安全规约的方案都无法消除simulation time</li></ul><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345587245646.jpg" alt=""></p><ul><li>tight reduction：仍然比loose reduction好</li><li>tight reduction会影响计算效率，如果一个方案需要考虑效率不要用这个</li><li>投偏应用的期刊（ieee）不要用tight reduction，会很别扭</li></ul><h2 id="lower-bound-security-level"><a href="#lower-bound-security-level" class="headerlink" title="lower bound security level"></a>lower bound security level</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345589181207.jpg" alt=""></p><p>concrete security：<br><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345589535483.jpg" alt=""></p><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345591531908.jpg" alt=""></p><ul><li>l和t越小越好，似的右边的值无限接近2^k</li></ul><h2 id="完美的安全规约"><a href="#完美的安全规约" class="headerlink" title="完美的安全规约"></a>完美的安全规约</h2><p>需要满足以下四点：<br><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345592681346.jpg" alt=""></p><p>但一般情况下这四点互斥，即无法达到多块好省。如下图：<br><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/16345593422148.jpg" alt=""></p><ul><li>tradeoff：很神奇，覆盖了computer science</li></ul>]]></content>
    
    
    <summary type="html">安全规约课程笔记，整理一下以备以后查询使用，如果有错误欢迎留言讨论</summary>
    
    
    
    <category term="安全规约" scheme="https://www.happyshark.cn/categories/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6/"/>
    
    
    <category term="安全规约" scheme="https://www.happyshark.cn/tags/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>安全规约第三讲——困难问题和安全规约的基本解释</title>
    <link href="https://www.happyshark.cn/2022/03/03/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2%E2%80%94%E2%80%94%E5%9B%B0%E9%9A%BE%E9%97%AE%E9%A2%98%E5%92%8C%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%A7%A3%E9%87%8A/"/>
    <id>https://www.happyshark.cn/2022/03/03/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2%E2%80%94%E2%80%94%E5%9B%B0%E9%9A%BE%E9%97%AE%E9%A2%98%E5%92%8C%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%A7%A3%E9%87%8A/</id>
    <published>2022-03-03T14:00:00.000Z</published>
    <updated>2022-03-03T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>computing problem</strong></p><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/image-20220530225850353.png" alt="image-20220530225850353"></p><ul><li>一种定义在数学原语上的数学对象</li><li>x指问题实例，y指其解，有无限多对</li><li>大多数情况下随着x增加计算y的开销会随之变大，但不是所有情况都如此</li></ul><p>计算问题可以分为两大类：computational problems 和 decisional problems</p><p>关于computing problem：</p><p>在计算问题中，一般最大类是computing problems</p><p>在计算复杂性中一般最大类是computational peoblems</p><p>密码学中又分成computational problems 和 decisional problems</p><p>当然在其他地方会混淆</p><p>关于计算复杂性</p><p>通过计算随着x的增加y增加的速度，从而判断其增长的速度可以达到哪个层次是计算复杂性最核心的问题之一</p><p><strong>computational problem</strong></p><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/image-20220530225909308.png" alt="image-20220530225909308"></p><ul><li>large space：可以简单通俗的理解为y的空间与x空间数量级一致</li><li>computational problem 也可以被称为 search problem，维基百科上面也有function problem的说法</li></ul><p><strong>Decisional problem</strong></p><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/image-20220530225924204.png" alt="image-20220530225924204"></p><ul><li>{0,1}不一定代表数学上的0和1，也可代表true or false</li><li>formal language：</li></ul><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/4oYS3jZ9dDAN2Tk.jpg" alt=""></p><ul><li>formal language：可以理解为一些字符组成的集合。</li></ul><h2 id="确定性-amp-概率"><a href="#确定性-amp-概率" class="headerlink" title="确定性&amp;概率"></a>确定性&amp;概率</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/Ae5VOGCfI6wUo8p.jpg" alt=""></p><ul><li>所有的算法都可以分为两大类：确定算法&amp;概率算法</li><li>一般认为概率算法比确定算法更有效，比如攻破一些方案的时候。</li><li>一般用（t，ε）表示一个方案在运行了t时间后返回一个正确答案的概率是ε。</li></ul><blockquote><p>做素数测试的时候会用到概率算法，而且非常有效，但目前没有办法说明其比确定算法更有效。但目前的例子说明了这一现象，故使用了believed而不是proofed</p></blockquote><h2 id="算法的分类"><a href="#算法的分类" class="headerlink" title="算法的分类"></a>算法的分类</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/VUb6Q14HqWfoum9.jpg" alt=""></p><ul><li>方案算法：构造一种方案</li><li>攻击算法</li><li>solution algorithm</li><li>规约算法</li></ul><blockquote><p>算法的分类可以更方便的去对一些行为进行定义</p></blockquote><h2 id="ploynomial-and-exponential"><a href="#ploynomial-and-exponential" class="headerlink" title="ploynomial and exponential"></a>ploynomial and exponential</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/2dZYPLobI73pyKW.jpg" alt=""></p><p>一下是非正式的分类</p><ul><li>ploynomial：是对f上限的定义</li><li>exponential：对f下限的定义</li></ul><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/iMkIPSNp34OTFtE.jpg" alt=""></p><ul><li>二者不是具体的的数值，而是反映了一种速度的趋势（二阶导）</li><li>2^160不算指数时间，因为他是确定的，只有2^λ才是</li></ul><blockquote><p>我们希望在多项式时间以内指数时间以上，通过这种方式吧合法用户和敌手分开：用户的合法计算时间很快，而敌手攻击的时间很慢</p></blockquote><h2 id="Negligible-and-Non-Negligible"><a href="#Negligible-and-Non-Negligible" class="headerlink" title="Negligible and Non-Negligible"></a>Negligible and Non-Negligible</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/WmEoQtO17wbPZyl.jpg" alt=""><br>可忽略&amp;不可忽略</p><ul><li>关于 cannot：f是以指数级的形式快速接近0，故可以忽略</li><li>关于super- ploynomial：多项式曲线以上的东西都称之</li><li>关于speed：同上，是一种趋势</li></ul><h2 id="概率-Probability"><a href="#概率-Probability" class="headerlink" title="概率 Probability"></a>概率 Probability</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/m8rP5d6jawoyB2h.jpg" alt=""></p><p>Q：为什么用概率算法而不用确定算法？<br>A：上文说过，概率算法更加有效</p><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/XvbBj3QnUrOuw4q.jpg" alt=""></p><ul><li>为啥要大于等于0:即使敌手输出一个签名在签名空间里面的概率等于0也是会发生的</li><li>在加密的时候为啥是1/2:在加密的时候敌手只有true &amp; false两种，故随机猜测的概率最少也要大于1/2</li></ul><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/oAhYiFdjbnZf8er.jpg" alt=""></p><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/CStM7oEfGF2uVyT.jpg" alt=""></p><ul><li>advantage：指在不同的事件中其概率不一致</li><li>给定一个概率值，无法区分一种攻击是否是成功or失败的攻击</li><li>advantage是一种调整后的概率来代替probability</li><li>最小值必须是0</li></ul><blockquote><p>实际上，为了给定一个概率值去区分敌手是否成功或者失败才发明了这个东西</p></blockquote><h2 id="定义advantage"><a href="#定义advantage" class="headerlink" title="定义advantage"></a>定义advantage</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/1WYyQHBtrXJRMKj.jpg" alt=""><br>pideal：在不获得任何信息的情况下盲猜的最大概率。</p><ul><li>上图显示了probability和advantage的区别</li></ul><blockquote><p>和前面的ε类似，需要在具体的语境和问题下才能确定probability和advantage是否等价</p></blockquote><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/EIFNhrksUx4ARY1.jpg" alt=""></p><p>一般我们不讨论advantage多大，只讨论其是否可被忽略</p><ul><li>推荐使用第二种定义，这样可以保证统一性，比如数字签名，加密等，这样的好处是其概率都处于0和1之间。</li></ul><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/3zqJpNXoPkE4nm2.jpg" alt=""></p><p>通过验证advantage是否可忽略，可以轻松的确定任何一种方案是否是安全的，换句话说，如果advantage时可忽略的，则方案时安全的</p><h1 id="困难问题"><a href="#困难问题" class="headerlink" title="困难问题"></a>困难问题</h1><h2 id="计算型困难问题"><a href="#计算型困难问题" class="headerlink" title="计算型困难问题"></a>计算型困难问题</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/cQYKh3jRFoEJw9A.jpg" alt=""></p><ul><li>关于random：涉及到了平均统计，不仅仅根据具体的x和y计算出来的，而是根据所有的x和y计算出来的</li></ul><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/SAWirBYXQFHNIVx.jpg" alt=""></p><p>判别式定义如上，参数解释如下：</p><ul><li>A(x)=True|x=True:当x=true的时候敌手猜中的概率</li><li>A(x)=True|x=False:猜错的的概率</li></ul><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/ER26WPjGIyfVlXb.jpg" alt=""></p><p>一些注解：<br><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/DUVAhndepMIW8Jy.jpg" alt=""></p><ul><li>对一些关键词不需要进行替换</li><li>weak &amp; strong 是好是坏需要结合语境和具体问题</li></ul><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/QoJPKFnrR9f47I6.jpg" alt=""></p><p>所有的assumption都可以分成两大类</p><blockquote><p>如果问题越难，则假设越弱<br>如果问题越弱，则假设越强</p></blockquote><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/eHMYiWtQb9K4JaI.jpg" alt=""></p><ul><li>只要是在安全模型下方案是安全的即可，一般来说在超出设定的场景中使用方案导致不安全的概率要大于方案本身出现不安全情况的概率</li></ul><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/Xhlmy3kLiTUPr9C.jpg" alt=""></p><ul><li>详见密码学报的文章</li></ul><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/s5bezU63Gk1wjJd.jpg" alt=""></p><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/jFSsMTfP8ALV7xo.jpg" alt=""></p><h2 id="困难问题的分析"><a href="#困难问题的分析" class="headerlink" title="困难问题的分析"></a>困难问题的分析</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/YFifNSVecWTEMZv.jpg" alt=""></p><blockquote><p>虽然现在没办法证明np不等于p，但是所有的密码方案都是基于这个式子的，故使用believed-to-be<br>但是在一些情况下可以证明其困难性：比如给定另外一些条件&amp;更强的假设</p></blockquote><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/nLmZS8Xz5dw2PTI.jpg" alt=""></p><ul><li>通过规约的形式：基于一个困难问题上提出一个方案</li><li>通过一个更弱的安全模型：比如限制，或者弱化敌手的能力</li></ul><blockquote><p>标准计算模型即图灵机</p></blockquote><p>一种证明困难问题的技巧<br><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/rvfDl2KFex5QbkZ.jpg" alt=""></p><h1 id="安全参数"><a href="#安全参数" class="headerlink" title="安全参数"></a>安全参数</h1><h2 id="parameter"><a href="#parameter" class="headerlink" title="parameter"></a>parameter</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/2tQiawfep83nVXL.jpg" alt=""></p><h2 id="level"><a href="#level" class="headerlink" title="level"></a>level</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/GdC5hKuIkzP3F61.jpg" alt=""><br>security level取决于具体的方案or问题的定义。</p><ul><li>我们定义一个方案或者问题具有k bit安全，当敌手在进行2^k次计算后成功的概率为2/3时<blockquote><p>卧报 34期会有更加具体的描述</p></blockquote></li></ul><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/ioearghU7wSuDzZ.jpg" alt=""></p><ul><li>通过计算得出的k bit安全等级是在当前情况下的安全等级若有更强的攻击方案出现则安全等级随之下降</li></ul><p>安全等级的上限：<br><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/GOzKyHoLgd7x4Xe.jpg" alt=""></p><ul><li>如果解决一个问题b能让我我门马上攻破一个方案则该困难问题b是安全等级的上限</li></ul><p><img src="https://i.loli.net/2021/10/18/tO6zbKqogidCfXU.jpg" alt=""></p><ul><li>如果攻破一个方案可以立马解决一个困难问题a，则方案的等级高于问题a的等级，即a是方案的下限</li></ul><p>如下图所示，a是有条件的</p><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/R4TCuQKVo8sfHLS.jpg" alt=""></p><ul><li>目前比较容易知道第三条和第四条，第二条无法做到</li></ul><blockquote><p>目前我们只讨论下限，因为一个方案的安全必须针对所有的敌手都安全，则方案的安全性必须高于最强的那一部分敌手的能力</p></blockquote><h1 id="安全的定义"><a href="#安全的定义" class="headerlink" title="安全的定义"></a>安全的定义</h1><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/jyHJRqfe6clmkZQ.jpg" alt=""></p><ul><li>关于security model：作为安全和方案之间的桥梁，将各种对方案的攻击转化为计算型问题，在用复杂性理论对其进行分析。</li></ul><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/oErsAwPpgyQHY2d.jpg" alt=""></p><ul><li>安全定义没有用到安全等级的概念</li><li>security definition只和security parameter相关，和security level无关</li></ul><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%B8%89%E8%AE%B2/cIpKoAfS4XwWYCe.jpg" alt=""></p><ul><li>security parameter与密码相关，和computing problem无关</li></ul>]]></content>
    
    
    <summary type="html">安全规约课程笔记，整理一下以备以后查询使用，如果有错误欢迎留言讨论</summary>
    
    
    
    <category term="安全规约" scheme="https://www.happyshark.cn/categories/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6/"/>
    
    
    <category term="安全规约" scheme="https://www.happyshark.cn/tags/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>安全规约第二讲——有限域，群，双线性对，哈希函数</title>
    <link href="https://www.happyshark.cn/2022/03/02/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%BA%8C%E8%AE%B2%E2%80%94%E2%80%94%E6%9C%89%E9%99%90%E5%9F%9F%EF%BC%8C%E7%BE%A4%EF%BC%8C%E5%8F%8C%E7%BA%BF%E6%80%A7%E5%AF%B9%EF%BC%8C%E5%93%88%E5%B8%8C%E5%87%BD%E6%95%B0/"/>
    <id>https://www.happyshark.cn/2022/03/02/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E4%BA%8C%E8%AE%B2%E2%80%94%E2%80%94%E6%9C%89%E9%99%90%E5%9F%9F%EF%BC%8C%E7%BE%A4%EF%BC%8C%E5%8F%8C%E7%BA%BF%E6%80%A7%E5%AF%B9%EF%BC%8C%E5%93%88%E5%B8%8C%E5%87%BD%E6%95%B0/</id>
    <published>2022-03-02T14:00:00.000Z</published>
    <updated>2022-03-02T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="有限域"><a href="#有限域" class="headerlink" title="有限域"></a>有限域</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCEc2762979e78af3f0ba59dc88224bc149.png" alt=""></p><h2 id="有限域的运算"><a href="#有限域的运算" class="headerlink" title="有限域的运算"></a>有限域的运算</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCEa9570ced8bd358cd98889c19bc85a403.png" alt=""></p><p>通过乘 加 来实现 </p><ul><li><p>除：u * v的逆元</p></li><li><p>减：u + v的逆元</p></li></ul><h2 id="举个例子"><a href="#举个例子" class="headerlink" title="举个例子"></a>举个例子</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCE5c588860c99c22b5b9e579a3487d7f08.png" alt=""></p><ul><li><p>n为整数</p></li><li><p>q为素数</p></li><li><p>有限域中包含了q^n个元素。</p></li><li><p>有限域内每个元的长度都为n * |q|</p></li></ul><h3 id="素数域"><a href="#素数域" class="headerlink" title="素数域"></a>素数域</h3><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCE1d07ffa8a8949c651ec144c2e61812c8.png" alt=""></p><h1 id="群"><a href="#群" class="headerlink" title="群"></a>群</h1><h2 id="阿贝尔群"><a href="#阿贝尔群" class="headerlink" title="阿贝尔群"></a>阿贝尔群</h2><p>定义：</p><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCE817e4cedef7fefbe7e3c524a625eaa9a.png" alt=""></p><ul><li>用点号（而不用加或者乘），可以是有限域中的加号，乘号.etc</li></ul><p>Ex：</p><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCE87c5bd91f34fd81f6b10a0c53d091d6a.png" alt=""></p><ul><li>可以通过H生成整个群的元素，所有的元素都可以通过h^i i=1,2,…得到</li></ul><h2 id="如何描述一个循环群？"><a href="#如何描述一个循环群？" class="headerlink" title="如何描述一个循环群？"></a>如何描述一个循环群？</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCEe0982072f639b0e98aff32db1bcdb48c.png" alt=""></p><ul><li><p>G：群的空间</p></li><li><p>g：生成元</p></li><li><p>p：阶数</p></li></ul><h2 id="群元素"><a href="#群元素" class="headerlink" title="群元素"></a>群元素</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCE2d23ebce74dace208a3cb2165bb52509.png" alt=""></p><ul><li>每个群元最少需要160bit</li></ul><blockquote><p>30期中有对安全等级做进一步解释</p></blockquote><h2 id="群中的简单问题和困难问题"><a href="#群中的简单问题和困难问题" class="headerlink" title="群中的简单问题和困难问题"></a>群中的简单问题和困难问题</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCE455fdcc706b2a7e5a3e74e4d2ec499ce.png" alt=""></p><ul><li><p>有些计算必须要足够简单</p></li><li><p>有些计算必须要足够困难，例如公私钥（一个基本的困难问题是离散对数问题，并且只有某些构造的比较好的群才有离散对数这样的性质）</p></li></ul><h2 id="easy-：group-exponentiation（群指数）"><a href="#easy-：group-exponentiation（群指数）" class="headerlink" title="easy ：group exponentiation（群指数）"></a>easy ：group exponentiation（群指数）</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCE7cb2b21769b2254f07416da610a28db1.png" alt=""></p><p>如上，定义一个运算，当x特别大的时候计算会比较困难，故采取先平方在乘的算法（square-and-multiply algorithm）</p><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCEf3416a938e2b04e523400e2f39f9d3d0.png" alt=""></p><p>采用上述方法，最大只需要2^2n次运算即可</p><h2 id="hard：Discrete-Logarithm（离散对数）"><a href="#hard：Discrete-Logarithm（离散对数）" class="headerlink" title="hard：Discrete Logarithm（离散对数）"></a>hard：Discrete Logarithm（离散对数）</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCE2a9b46ae93dcc2def66fbcde88d8c088.png" alt=""></p><ul><li><p>如果G是一个具有素数阶的循环群，那么任意给定两个群元g h ，那么这个离散对数x必然存在，而且是唯一的，这就是为啥一般都比较喜欢具有素数阶的循环群。</p></li><li><p>如果可以很简单的解决离散对数问题，那么所有基于群对数的加密方案都会不安全。</p></li></ul><p>以下介绍离散对数问题的计算复杂性：</p><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCEb7a23a84cda385f253f2cc4801f041a6.png" alt=""></p><blockquote><p>Ω代表下界，指至少需要根号p</p><p>O代表上界</p></blockquote><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCE12f2f61a0952c7c414a65433ca631157.png" alt=""></p><ul><li>群的阶必须要大于160来抵抗特殊的攻击，如果小于则敌手最多只需2^80步即可攻破</li></ul><h2 id="群的选择"><a href="#群的选择" class="headerlink" title="群的选择"></a>群的选择</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCE18b8ccbc002c66b64f29671ad336841e.png" alt=""></p><p>为什么要定义其他的一些更加复杂&amp;高级的群而不直接使用有限域中已有的两个群？</p><ul><li>有很多原因，比如椭圆曲线群，群元素可以用长度表示从而让其长度更短。</li></ul><h3 id="乘法群"><a href="#乘法群" class="headerlink" title="乘法群"></a>乘法群</h3><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCEea4173b35c4333c74f36d7964c77392a.png" alt=""></p><ul><li><p>q指大素数，p是比q小的一个素数</p></li><li><p>p只需要大于160bit，但q要大于1024bit（与RSA相似），因为目前存在一种特殊的攻击可以攻破该方案，使用这种攻击的前提就是q足够小</p></li></ul><h3 id="椭圆曲线群"><a href="#椭圆曲线群" class="headerlink" title="椭圆曲线群"></a>椭圆曲线群</h3><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCEc412e886a311fd901e41e9b33945821e.png" alt=""></p><ul><li><p>主需要给出横坐标，从而减小其长度表示（y通过计算得出，故增加了计算量）</p></li><li><p>u·v：包含了有限域中的加法和乘法运算</p></li></ul><h2 id="基于椭圆曲线群的计算"><a href="#基于椭圆曲线群的计算" class="headerlink" title="基于椭圆曲线群的计算"></a>基于椭圆曲线群的计算</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCE838787879dbd05fad0c86bfc1c145971.png" alt=""></p><ul><li>基于以上算法，可以构造出更加复杂的方案，比如上图中的Question</li></ul><h1 id="双线性对"><a href="#双线性对" class="headerlink" title="双线性对"></a>双线性对</h1><p>特点：将椭圆曲线上群的两个群元映射到一个乘法群上的群元，同时这种运算可以保持同态性。</p><blockquote><p>同态性：最早由两位日本学者提出，他们想解决椭圆曲线上困难问题，故提出将定义在椭圆曲线上的问题映射到惩罚群上去，在乘法群内解决在反映射回来。</p></blockquote><p>双线性对有3种：</p><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCE320489e16ca7da93f81cfb60ed1d457c.png" alt=""></p><h2 id="Symmetric-Pairing"><a href="#Symmetric-Pairing" class="headerlink" title="Symmetric Pairing"></a>Symmetric Pairing</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCEd928e03f27c675af21ec91584048feb4.png" alt=""></p><h3 id="大小"><a href="#大小" class="headerlink" title="大小"></a>大小</h3><p><img src="https://blogimages.happyshark.cn/安全规约第四讲/WEBRESOURCE98090e9af310e1756399b2dff81f4a88.png" alt=""></p><ul><li>实际上，80bit已经不够安全，现在最少需要128bit</li></ul><h2 id="Asymmetric-Pairing-非对称对"><a href="#Asymmetric-Pairing-非对称对" class="headerlink" title="Asymmetric Pairing 非对称对"></a>Asymmetric Pairing 非对称对</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCEaa07bdc24b9d5e942606a215ae63aefd.png" alt=""></p><h3 id="大小-1"><a href="#大小-1" class="headerlink" title="大小"></a>大小</h3><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCEe8f2304bd57b897b1ac67f90df027f1e.png" alt=""></p><ul><li>因为目前有三种群 g1 g2 gt，为了确保安全，目前g1最少需要160bit，g2=gt最少需要1024bit，目的为了让g1群越小越好</li></ul><h2 id="pairing上的计算"><a href="#pairing上的计算" class="headerlink" title="pairing上的计算"></a>pairing上的计算</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCE49cc290fd3e68c09f924712503c5de6f.png" alt=""></p><ul><li>在pairing上的计算可以拓展成乘法，指数，。。。，等其他方式的计算，实际上很多方案（比如加密，签名，认证等等）都是基于此扩展出来的，但是需要很高的技巧</li></ul><h1 id="哈希函数-H-·"><a href="#哈希函数-H-·" class="headerlink" title="哈希函数 H(·)"></a>哈希函数 H(·)</h1><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCE8746821140089f64e20d6c1e2259252b.png" alt=""></p><ul><li>其中的一个用途：缩短签名长度：如果有个签名方案是按每bit签名，若有个1g的文件不压缩的话就签到猴年马月了；相反通过hash缩小到一个定长长度在对hash签名就很快</li></ul><h2 id="基于安全性的分类"><a href="#基于安全性的分类" class="headerlink" title="基于安全性的分类"></a>基于安全性的分类</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCEb1d3d5adab5bc1eb264ddfcf643c4b1b.png" alt=""></p><h2 id="基于输出对哈希函数进行分类"><a href="#基于输出对哈希函数进行分类" class="headerlink" title="基于输出对哈希函数进行分类"></a>基于输出对哈希函数进行分类</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCE28088345de4600719e80552d0009a7c6.png" alt=""></p><p>可以分成三类：</p><ul><li><p>n bit 的串：输出结果可以用作key，与对称密码结合用于加解密</p></li><li><p>Zp：</p></li><li><p>输出到群中： </p></li></ul><blockquote><p>为什么不直接用第二种取代第三种：如果使用第二种方法在方案构造中会出现不安全，只有用第三种才能构造出安全的方案。</p></blockquote><h1 id="随机函数"><a href="#随机函数" class="headerlink" title="随机函数"></a>随机函数</h1><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCEed4f8c1cdfa807e7136c505b29932975.png" alt=""></p><blockquote><p>现有的公钥加密也是需要随机数得到，否则无法达到ind安全</p></blockquote><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCEad988e3ff026c88b67fa82bf4b347693.png" alt=""></p><blockquote><p>现有的密码方案是依赖许多假设的 </p></blockquote><h1 id="不安全的方案"><a href="#不安全的方案" class="headerlink" title="不安全的方案"></a>不安全的方案</h1><blockquote><p>错误的方案原因都类似的，下面以签名为例</p></blockquote><h2 id="不安全的数字前面"><a href="#不安全的数字前面" class="headerlink" title="不安全的数字前面"></a>不安全的数字前面</h2><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCEb90c906ce54a3d0ded13831bae59cfda.png" alt=""></p><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCEf36c8845a0682996c6bbd6b06c4287ae.png" alt=""></p><ul><li>基础运算需要大量的去熟悉联系</li></ul><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCEfc17b617a64b4043bd62523f15cb5853.png" alt=""></p><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCE4f9fbb0a9e11b91a643639dcf405081e.png" alt=""></p><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCE7193aa0ed95d59e60bc2f89126e23944.png" alt=""></p><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCE5c5de542ef3f6fb6e2d8825a27c3690e.png" alt=""></p><blockquote><p>第四个和第五个相似</p></blockquote><p><img src="https://blogimages.happyshark.cn/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6%E7%AC%AC%E5%9B%9B%E8%AE%B2/WEBRESOURCE99afb70e8ef8a911a7b38eb972aac87d.png" alt=""></p><blockquote><p>6与1类似</p></blockquote>]]></content>
    
    
    <summary type="html">安全规约课程笔记，整理一下以备以后查询使用，如果有错误欢迎留言讨论</summary>
    
    
    
    <category term="安全规约" scheme="https://www.happyshark.cn/categories/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6/"/>
    
    
    <category term="安全规约" scheme="https://www.happyshark.cn/tags/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>抓饭</title>
    <link href="https://www.happyshark.cn/2022/02/12/%E6%8A%93%E9%A5%AD/"/>
    <id>https://www.happyshark.cn/2022/02/12/%E6%8A%93%E9%A5%AD/</id>
    <published>2022-02-12T04:00:00.000Z</published>
    <updated>2022-02-12T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<hr><ol><li><p>羊肉切开洗净，把水晾干，油锅加盐（不崩），中火把肉放进去抄抄，炒出水之后盖上锅盖把水闷干。</p><blockquote><p>过几分钟就开盖翻炒一下。 </p></blockquote><p><img src="https://blogimages.happyshark.cn/food/image-20220212132430021.png" alt="image-20220212132430021"></p></li><li><p>闷干之后出锅备用，油留锅里别倒掉<br><img src="https://blogimages.happyshark.cn/food/image-20220212132517077.png" alt="image-20220212132517077"></p></li><li><p>胡萝卜（3个）削皮切条，把米洗净备用<br><img src="https://blogimages.happyshark.cn/food/image-20220212132540721.png" alt="image-20220212132540721"></p></li><li><p>胡萝卜倒进锅里中火炒炒（油少了可以加些油），加些盐<br><img src="https://blogimages.happyshark.cn/food/image-20220212132605423.png" alt="image-20220212132605423"></p></li><li><p>抄完倒进高压锅，再往锅里加些水，米撒到胡萝卜上面，肉放到米上面。盖上锅盖大火烧到高压锅喷气，火改小一些（改到泄压阀不那么暴力为止）压10~15分钟米熟为止<br><img src="https://blogimages.happyshark.cn/food/image-20220212132627827.png" alt="image-20220212132627827"><br><img src="https://blogimages.happyshark.cn/food/image-20220212132651559.png" alt="image-20220212132651559"></p></li><li><p>关火高压锅放一边泄气，气没了就可以开锅享受美食啦</p></li></ol>]]></content>
    
    
    <summary type="html">老爸的做法，高压锅版</summary>
    
    
    
    <category term="厨房里的秘密" scheme="https://www.happyshark.cn/categories/%E5%8E%A8%E6%88%BF%E9%87%8C%E7%9A%84%E7%A7%98%E5%AF%86/"/>
    
    
    <category term="家的味道" scheme="https://www.happyshark.cn/tags/%E5%AE%B6%E7%9A%84%E5%91%B3%E9%81%93/"/>
    
  </entry>
  
  <entry>
    <title>蒸面条</title>
    <link href="https://www.happyshark.cn/2022/02/11/%E8%92%B8%E9%9D%A2%E6%9D%A1/"/>
    <id>https://www.happyshark.cn/2022/02/11/%E8%92%B8%E9%9D%A2%E6%9D%A1/</id>
    <published>2022-02-11T04:00:00.000Z</published>
    <updated>2022-02-11T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<hr><ol><li>蒸锅加水，放手工面大火蒸到水开，改中火蒸十~十五分钟<br><img src="https://blogimages.happyshark.cn/food/image-20220212131748569.png" alt="image-20220212131748569"></li><li>猪肉切片，蒜薹洗干净切成一段一段的，姜切成片，切一节葱备用，也可选干辣椒调色<br><img src="https://blogimages.happyshark.cn/food/image-20220212131830715.png" alt="image-20220212131830715"></li><li>锅里放油，加猪肉炒变色放生抽调色，放姜，葱，干辣椒，蒜薹炒半熟，加咸盐，出锅备用<br><img src="https://blogimages.happyshark.cn/food/image-20220212131900050.png" alt="image-20220212131900050"></li><li>面蒸好之后出锅加些油（如果面太干加些水）拌开，蒸锅再加水大火煮水<br><img src="https://blogimages.happyshark.cn/food/image-20220212131921751.png" alt="image-20220212131921751"></li><li>加生抽调颜色，酱油，咸盐调味，可选十三香花椒粉鸡精。继续拌开<br><img src="https://blogimages.happyshark.cn/food/image-20220212131948425.png" alt="image-20220212131948425"></li><li>把前面炒的菜倒进去继续拌开，尝下味道淡了加生抽调味，干的话再加点油。一定要拌开不能缠一块<br><img src="https://blogimages.happyshark.cn/food/image-20220212132003990.png" alt="image-20220212132003990"></li><li>蒸锅水开了之后关火，先放面再放菜（避免菜从篦子洞掉下去），盖上锅盖大火烧一会锅里充满蒸汽之后改小火慢慢焖蒸10~15分钟入味。<br><img src="https://blogimages.happyshark.cn/food/image-20220212132030268.png" alt="image-20220212132030268"></li><li>关火出锅，拌辣椒酱，香菇酱。味道好极啦<br><img src="https://blogimages.happyshark.cn/food/image-20220212132108982.png" alt="image-20220212132108982"></li></ol>]]></content>
    
    
    <summary type="html">老妈的传统手艺，蒸面条！感觉还是手工面好吃一些，不过这次没买到就只能吃机器压的面了</summary>
    
    
    
    <category term="厨房里的秘密" scheme="https://www.happyshark.cn/categories/%E5%8E%A8%E6%88%BF%E9%87%8C%E7%9A%84%E7%A7%98%E5%AF%86/"/>
    
    
    <category term="家的味道" scheme="https://www.happyshark.cn/tags/%E5%AE%B6%E7%9A%84%E5%91%B3%E9%81%93/"/>
    
  </entry>
  
  <entry>
    <title>炒扇贝肉</title>
    <link href="https://www.happyshark.cn/2022/02/10/%E7%82%92%E6%89%87%E8%B4%9D%E8%82%89/"/>
    <id>https://www.happyshark.cn/2022/02/10/%E7%82%92%E6%89%87%E8%B4%9D%E8%82%89/</id>
    <published>2022-02-10T04:00:00.000Z</published>
    <updated>2022-02-10T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<hr><ol><li><p>把贝壳肉清理出来，去掉内胆杂质</p><p><img src="https://blogimages.happyshark.cn/food/image-20220210151231250.png" alt="image-20220210151231250"></p></li><li><p>锅里加油，放姜和辣椒抄一抄出锅备用</p><p><img src="https://blogimages.happyshark.cn/food/image-20220210151256350.png" alt="image-20220210151256350"></p></li><li><p>加油放葱姜香锅，放扇贝肉炒熟，改中火加酱油调色，耗油调味，料酒去腥</p><p><img src="https://blogimages.happyshark.cn/food/image-20220210151314665.png" alt="image-20220210151314665"></p></li><li><p>把辣椒加进去拌开，尝尝咸淡，淡的话可以加点盐。小火收汁出锅</p><p><img src="https://blogimages.happyshark.cn/food/image-20220210151339498.png" alt="image-20220210151339498"></p></li></ol>]]></content>
    
    
    <summary type="html">一大袋子扇贝，弄完就一点点，不够塞牙缝的</summary>
    
    
    
    <category term="厨房里的秘密" scheme="https://www.happyshark.cn/categories/%E5%8E%A8%E6%88%BF%E9%87%8C%E7%9A%84%E7%A7%98%E5%AF%86/"/>
    
    
    <category term="家的味道" scheme="https://www.happyshark.cn/tags/%E5%AE%B6%E7%9A%84%E5%91%B3%E9%81%93/"/>
    
  </entry>
  
  <entry>
    <title>炒烤肉</title>
    <link href="https://www.happyshark.cn/2022/02/10/%E7%82%92%E7%83%A4%E8%82%89/"/>
    <id>https://www.happyshark.cn/2022/02/10/%E7%82%92%E7%83%A4%E8%82%89/</id>
    <published>2022-02-10T04:00:00.000Z</published>
    <updated>2022-02-10T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<hr><ol><li><p>羊肉拿出来化成半冻状态，切片</p><p><img src="https://blogimages.happyshark.cn/food/image-20220210151607906.png" alt="image-20220210151607906"></p></li><li><p>可选步骤：如果想吃软一点的烤肉可在肉里面加些勾芡淀粉，抓一抓拌匀</p><blockquote><p>就和揉面一样把肉放到盆里，然后加点淀粉开始揉，揉开就ok</p></blockquote></li><li><p>锅里放油防粘锅（看一下肥肉多不多，多的话油可以少放点），放肉小火炒</p><p><img src="https://blogimages.happyshark.cn/food/image-20220210151726064.png" alt="image-20220210151726064"></p></li><li><p>炒到变色，放点盐，辣椒面</p><p><img src="https://blogimages.happyshark.cn/food/image-20220210151756289.png" alt="image-20220210151756289"></p></li><li><p>炒熟，在放孜然，关火拌开出锅</p><p><img src="https://blogimages.happyshark.cn/food/image-20220210151817390.png" alt="image-20220210151817390"></p></li></ol>]]></content>
    
    
    <summary type="html">年夜饭必背硬菜之一，包含了嫩一点和干一点两种做法~</summary>
    
    
    
    <category term="厨房里的秘密" scheme="https://www.happyshark.cn/categories/%E5%8E%A8%E6%88%BF%E9%87%8C%E7%9A%84%E7%A7%98%E5%AF%86/"/>
    
    
    <category term="家的味道" scheme="https://www.happyshark.cn/tags/%E5%AE%B6%E7%9A%84%E5%91%B3%E9%81%93/"/>
    
  </entry>
  
  <entry>
    <title>红烧多宝鱼</title>
    <link href="https://www.happyshark.cn/2022/02/10/%E7%BA%A2%E7%83%A7%E5%A4%9A%E5%AE%9D%E9%B1%BC/"/>
    <id>https://www.happyshark.cn/2022/02/10/%E7%BA%A2%E7%83%A7%E5%A4%9A%E5%AE%9D%E9%B1%BC/</id>
    <published>2022-02-10T04:00:00.000Z</published>
    <updated>2022-02-10T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<hr><ol><li><p>剪掉尾巴和鱼鳍，把鱼鳃和内胆掏干净（边上有个小孔从那开始沿着黑色部分剪开，里面掏干净不要弄破内胆）</p><p><img src="https://blogimages.happyshark.cn/food/image-20220210150909686.png" alt="image-20220210150909686"></p></li><li><p>锅里倒油，放葱和姜香锅，然后加酱油，耗油，水</p><p><img src="https://blogimages.happyshark.cn/food/image-20220210150936619.png" alt="image-20220210150936619"></p></li><li><p>放入鱼，大火烧开，有沫（血）的话可以撇一下</p><p><img src="https://blogimages.happyshark.cn/food/image-20220210150955994.png" alt="image-20220210150955994"></p></li><li><p>放料酒去腥，在放点葱调色，小伙炖一会大火收汁。出锅之前放点鸡精提味，在撇一下沫</p><p><img src="https://blogimages.happyshark.cn/food/image-20220210151013356.png" alt="image-20220210151013356"></p></li><li><p>水蒸发的差不多了收汁出锅</p><p><img src="https://blogimages.happyshark.cn/food/image-20220210151038891.png" alt="image-20220210151038891"></p></li></ol>]]></content>
    
    
    <summary type="html">多宝鱼，感觉这鱼肉没有鲳鱼好吃orz</summary>
    
    
    
    <category term="厨房里的秘密" scheme="https://www.happyshark.cn/categories/%E5%8E%A8%E6%88%BF%E9%87%8C%E7%9A%84%E7%A7%98%E5%AF%86/"/>
    
    
    <category term="家的味道" scheme="https://www.happyshark.cn/tags/%E5%AE%B6%E7%9A%84%E5%91%B3%E9%81%93/"/>
    
  </entry>
  
  <entry>
    <title>蒸饭（高压锅速成版）</title>
    <link href="https://www.happyshark.cn/2022/02/10/%E8%92%B8%E9%A5%AD%EF%BC%88%E9%AB%98%E5%8E%8B%E9%94%85%E9%80%9F%E6%88%90%E7%89%88%EF%BC%89/"/>
    <id>https://www.happyshark.cn/2022/02/10/%E8%92%B8%E9%A5%AD%EF%BC%88%E9%AB%98%E5%8E%8B%E9%94%85%E9%80%9F%E6%88%90%E7%89%88%EF%BC%89/</id>
    <published>2022-02-10T04:00:00.000Z</published>
    <updated>2022-02-10T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<hr><ol><li><p>高压锅里面放水，米饭洗净装到碗里放进高压锅。当然也可以在下面水里面放个玉米，或者在上面放个红薯利用下空间hhh</p><p><img src="https://blogimages.happyshark.cn//food/image-20220210150208622.png" alt="image-20220210150208622"></p></li><li><p>盖上盖子大火烧到往外喷气开始，火稍微关小点（避免压力太高，也不要太小了就不喷气了）继续倒计时10分钟</p><p><img src="https://blogimages.happyshark.cn//food/image-20220210150353001.png" alt="image-20220210150353001"></p></li><li><p>关火，等压力阀下去再焖十来分钟出锅就行~要是时间不够连锅放到冷水里面冷却一下</p><p><img src="https://blogimages.happyshark.cn//food/20220210150427.png" alt=""></p></li></ol>]]></content>
    
    
    <summary type="html">速成米饭，麻麻再也不担心我忘了提前用电饭锅做米饭了</summary>
    
    
    
    <category term="厨房里的秘密" scheme="https://www.happyshark.cn/categories/%E5%8E%A8%E6%88%BF%E9%87%8C%E7%9A%84%E7%A7%98%E5%AF%86/"/>
    
    
    <category term="家的味道" scheme="https://www.happyshark.cn/tags/%E5%AE%B6%E7%9A%84%E5%91%B3%E9%81%93/"/>
    
  </entry>
  
  <entry>
    <title>清蒸贝壳</title>
    <link href="https://www.happyshark.cn/2022/02/09/%E6%B8%85%E8%92%B8%E8%B4%9D%E5%A3%B3/"/>
    <id>https://www.happyshark.cn/2022/02/09/%E6%B8%85%E8%92%B8%E8%B4%9D%E5%A3%B3/</id>
    <published>2022-02-09T04:00:00.000Z</published>
    <updated>2022-02-09T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<hr><ol><li><p>清洗一下贝壳肉</p><p><img src="https://blogimages.happyshark.cn//food/image-20220209225923639.png" alt=""></p></li><li><p>清水煮一碗粉丝</p><p><img src="https://blogimages.happyshark.cn//food/image-20220209230241958.png" alt="image-20220209230241958"></p></li><li><p>调汁：葱姜耗油水料酒生抽</p><p><img src="https://blogimages.happyshark.cn//food/image-20220209230307708.png" alt="image-20220209230307708"></p></li><li><p>每个贝壳上面放点粉丝，再加汁，上蒸锅，加水大火蒸六到十分钟</p><p><img src="https://blogimages.happyshark.cn//food/image-20220209230341168.png" alt="image-20220209230341168"></p></li><li><p>关火出锅</p><p><img src="https://blogimages.happyshark.cn//food/image-20220209230404457.png" alt="image-20220209230404457"></p></li></ol>]]></content>
    
    
    <summary type="html">清蒸贝壳，味道好极啦</summary>
    
    
    
    <category term="厨房里的秘密" scheme="https://www.happyshark.cn/categories/%E5%8E%A8%E6%88%BF%E9%87%8C%E7%9A%84%E7%A7%98%E5%AF%86/"/>
    
    
    <category term="家的味道" scheme="https://www.happyshark.cn/tags/%E5%AE%B6%E7%9A%84%E5%91%B3%E9%81%93/"/>
    
  </entry>
  
  <entry>
    <title>糖醋排骨</title>
    <link href="https://www.happyshark.cn/2022/02/09/%E7%B3%96%E9%86%8B%E6%8E%92%E9%AA%A8/"/>
    <id>https://www.happyshark.cn/2022/02/09/%E7%B3%96%E9%86%8B%E6%8E%92%E9%AA%A8/</id>
    <published>2022-02-09T04:00:00.000Z</published>
    <updated>2022-02-09T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<hr><ol><li><p>白糖淀粉西红柿酱加水配汁</p><p><img src="https://blogimages.happyshark.cn//food/image-20220210120640514.png" alt="image-20220210120640514"></p></li><li><p>锅里加汁，放红烧排骨（去调料）炒熟</p><p><img src="https://blogimages.happyshark.cn//food/image-20220210120723628.png" alt="image-20220210120723628"></p><p><img src="https://blogimages.happyshark.cn//food/image-20220210120741093.png" alt="image-20220210120741093"></p></li></ol>]]></content>
    
    
    <summary type="html">年夜饭c位佳肴，全家吃了都说好</summary>
    
    
    
    <category term="厨房里的秘密" scheme="https://www.happyshark.cn/categories/%E5%8E%A8%E6%88%BF%E9%87%8C%E7%9A%84%E7%A7%98%E5%AF%86/"/>
    
    
    <category term="家的味道" scheme="https://www.happyshark.cn/tags/%E5%AE%B6%E7%9A%84%E5%91%B3%E9%81%93/"/>
    
  </entry>
  
</feed>
